{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import{Card,CardMedia,CardContent,Typography,Grid,Tooltip,Chip}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import React from'react';import styled from'styled-components';import hiking from'../../assets/hiking.jpg';import UserAvatar from'../../components/UserAvatar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({cutText:{textOverflow:'ellipsis',overflow:'hidden',height:'1.2em',whiteSpace:'nowrap',cursor:'pointer'}});var CardInformation=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    height: 100%;\\n\\n    :hover {\\n        background-color: #ebebeb;\\n    }\\n\"])));var TitleArea=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    flex: 1;\\n    padding: 15px;\\n    color: white;\\n    background-color: #f44336;\\n\"])));var ActivityCard=function ActivityCard(_ref){var activity=_ref.activity,openPopup=_ref.openPopup,setOpenPopup=_ref.setOpenPopup,setActivity=_ref.setActivity;var participants=new String(activity.registeredParticipants.length);var fullCapacity=new String(activity.capacity);var comparison=new String(participants+'/'+fullCapacity);var date=new Date(activity.time).toLocaleDateString()+', '+new Date(activity.time-7200000).toLocaleTimeString();var classes=useStyles();var onClickActivity=function onClickActivity(){setOpenPopup(!openPopup);console.log(activity);setActivity(activity);};var showActivityLevel=function showActivityLevel(actLevel){if(actLevel==='HIGH'){return'Høyt';}else if(actLevel==='MEDIUM'){return'Middels';}else if(actLevel==='LOW'){return'Lavt';}};var picture=function picture(){if(activity.image.length>40){return activity.image;}return hiking;};return/*#__PURE__*/_jsx(Card,{onClick:onClickActivity,style:{height:'20rem'},children:/*#__PURE__*/_jsxs(CardInformation,{children:[/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(CardMedia,{component:\"img\",alt:'Image related to the activity'+activity.title,height:\"140\",image:picture()// hente bildet frå aktiviteta\n})})}),/*#__PURE__*/_jsx(TitleArea,{children:/*#__PURE__*/_jsxs(Grid,{container:true,wrap:\"nowrap\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h5\",component:\"h3\",children:activity.title})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Chip,{variant:\"outlined\",size:\"small\",label:comparison,style:{backgroundColor:'#ffa6a0',borderBlockEndWidth:'0px',color:'white'}}),/*#__PURE__*/_jsx(Chip,{variant:\"outlined\",size:\"small\",label:showActivityLevel(activity.activityLevel),style:{backgroundColor:'#ffa6a0',borderBlockEndWidth:'0px',color:'white'}})]})]})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,wrap:\"nowrap\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Tooltip,{title:activity.user.firstname,children:/*#__PURE__*/_jsx(UserAvatar,{user:activity.user,type:\"small\"})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\",children:date})})]}),/*#__PURE__*/_jsx(Typography,{className:classes.cutText,variant:\"body2\",color:\"textSecondary\",component:\"p\",style:{color:'black'},children:activity.description})]})]})});};export default ActivityCard;","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/ActivityComponents/ActivityCard.tsx"],"names":["Card","CardMedia","CardContent","Typography","Grid","Tooltip","Chip","makeStyles","React","styled","hiking","UserAvatar","useStyles","cutText","textOverflow","overflow","height","whiteSpace","cursor","CardInformation","div","TitleArea","ActivityCard","activity","openPopup","setOpenPopup","setActivity","participants","String","registeredParticipants","length","fullCapacity","capacity","comparison","date","Date","time","toLocaleDateString","toLocaleTimeString","classes","onClickActivity","console","log","showActivityLevel","actLevel","picture","image","title","backgroundColor","borderBlockEndWidth","color","activityLevel","user","firstname","description"],"mappings":"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","sourcesContent":["import {\n    Card,\n    CardMedia,\n    CardContent,\n    Typography,\n    Grid,\n    Tooltip,\n    Chip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport hiking from '../../assets/hiking.jpg';\nimport ActivityResponse from '../../interfaces/ActivityResponse';\nimport UserAvatar from '../../components/UserAvatar'\n\nconst useStyles = makeStyles({\n    cutText: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        height: '1.2em',\n        whiteSpace: 'nowrap',\n        cursor:'pointer'\n    },\n});\n\nconst CardInformation = styled.div`\n    height: 100%;\n\n    :hover {\n        background-color: #ebebeb;\n    }\n`;\nconst TitleArea = styled.div`\n    flex: 1;\n    padding: 15px;\n    color: white;\n    background-color: #f44336;\n`;\n\ninterface Props {\n    activity: ActivityResponse;\n    openPopup: boolean;\n    setOpenPopup: React.Dispatch<React.SetStateAction<boolean>>;\n    setActivity: any;\n}\n\nconst ActivityCard = ({\n    activity,\n    openPopup,\n    setOpenPopup,\n    setActivity,\n}: Props) => {\n    const participants = new String(activity.registeredParticipants.length);\n    const fullCapacity = new String(activity.capacity);\n    const comparison = new String(participants + '/' + fullCapacity);\n    const date = new Date(activity.time).toLocaleDateString() + ', ' + new Date(activity.time - 7200000).toLocaleTimeString();\n    const classes = useStyles();\n\n    const onClickActivity = () => {\n        setOpenPopup(!openPopup);\n        console.log(activity)\n        setActivity(activity);\n    };\n\n    const showActivityLevel = (actLevel: string) => {\n        if (actLevel === 'HIGH') {\n            return 'Høyt'\n        } else if (actLevel === 'MEDIUM') {\n            return 'Middels'\n        } else if (actLevel === 'LOW') {\n            return 'Lavt'\n        }\n    }\n\n    const picture = (): any => {\n        if (activity.image.length > 40) {\n            return activity.image;\n        }\n        return hiking;\n    };\n    return (\n        <Card\n            onClick={onClickActivity}\n            style={{\n                height: '20rem',\n            }}\n        >\n            <CardInformation>\n                <Grid>\n                    <Grid item>\n                        <CardMedia\n                            component=\"img\"\n                            alt={\n                                'Image related to the activity' + activity.title\n                            }\n                            height=\"140\"\n                            image={picture()} // hente bildet frå aktiviteta\n                        />\n                    </Grid>\n                </Grid>\n                <TitleArea>\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item xs={8}>\n                            <Typography\n                                gutterBottom\n                                variant=\"h5\"\n                                component=\"h3\"\n                            >\n                                {activity.title}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={comparison}\n                                style={{\n                                    backgroundColor: '#ffa6a0',\n                                    borderBlockEndWidth: '0px',\n                                    color: 'white',\n                                }}\n                            />\n                            <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={showActivityLevel(activity.activityLevel)}\n                                style={{\n                                    backgroundColor: '#ffa6a0',\n                                    borderBlockEndWidth: '0px',\n                                    color: 'white',\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </TitleArea>\n                <CardContent>\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <Tooltip title={activity.user.firstname}>\n                                <UserAvatar user={activity.user} type='small'></UserAvatar>\n                            </Tooltip>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                component=\"p\"\n                            >\n                                {date}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Typography\n                        className={classes.cutText}\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                        style={{ color: 'black' }}\n                    >\n                        {activity.description}\n                    </Typography>\n                </CardContent>\n            </CardInformation>\n        </Card>\n    );\n};\n\nexport default ActivityCard;\n"]},"metadata":{},"sourceType":"module"}