{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import GroupCard from'./GroupCard';import{jsx as _jsx}from\"react/jsx-runtime\";var StyledUl=styled.ul(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    height: 300px;\\n    overflow-y: scroll;\\n    padding: 0;\\n\"])));export var Groups=function Groups(_ref){var groups=_ref.groups,handleGroupClicked=_ref.handleGroupClicked,searchInput=_ref.searchInput;return/*#__PURE__*/_jsx(StyledUl,{children:searchInput!==undefined?groups.filter(function(group){if(searchInput!==undefined){if(searchInput===''){return group;}else if(group.groupName!=null&&group.groupName.toLowerCase().includes(searchInput.toLocaleLowerCase())){return group;}}}).map(function(group){return/*#__PURE__*/_jsx(GroupCard,{group:group,handleGroupClicked:handleGroupClicked},group.groupId);}):groups.map(function(group){return/*#__PURE__*/_jsx(GroupCard,{group:group,handleGroupClicked:handleGroupClicked},group.groupId);})});};","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/GroupsAndFriendsComponents/Groups.tsx"],"names":["React","styled","GroupCard","StyledUl","ul","Groups","groups","handleGroupClicked","searchInput","undefined","filter","group","groupName","toLowerCase","includes","toLocaleLowerCase","map","groupId"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAGF,MAAM,CAACG,EAAV,iIAAd,CAYA,MAAO,IAAMC,CAAAA,MAA6B,CAAG,QAAhCA,CAAAA,MAAgC,MAI1B,IAHfC,CAAAA,MAGe,MAHfA,MAGe,CAFfC,kBAEe,MAFfA,kBAEe,CADfC,WACe,MADfA,WACe,CACf,mBACI,KAAC,QAAD,WACKA,WAAW,GAAKC,SAAhB,CACKH,MAAM,CACDI,MADL,CACY,SAACC,KAAD,CAAkB,CACtB,GAAIH,WAAW,GAAKC,SAApB,CAA+B,CAC3B,GAAID,WAAW,GAAK,EAApB,CAAwB,CACpB,MAAOG,CAAAA,KAAP,CACH,CAFD,IAEO,IACHA,KAAK,CAACC,SAAN,EAAmB,IAAnB,EACAD,KAAK,CAACC,SAAN,CACKC,WADL,GAEKC,QAFL,CAEcN,WAAW,CAACO,iBAAZ,EAFd,CAFG,CAKL,CACE,MAAOJ,CAAAA,KAAP,CACH,CACJ,CACJ,CAdL,EAeKK,GAfL,CAeS,SAACL,KAAD,qBACD,KAAC,SAAD,EAEI,KAAK,CAAEA,KAFX,CAGI,kBAAkB,CAAEJ,kBAHxB,EACSI,KAAK,CAACM,OADf,CADC,EAfT,CADL,CAuBKX,MAAM,CAACU,GAAP,CAAW,SAACL,KAAD,qBACP,KAAC,SAAD,EAEI,KAAK,CAAEA,KAFX,CAGI,kBAAkB,CAAEJ,kBAHxB,EACSI,KAAK,CAACM,OADf,CADO,EAAX,CAxBV,EADJ,CAkCH,CAvCM","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Group from '../../interfaces/Group';\nimport GroupCard from './GroupCard';\n\nconst StyledUl = styled.ul`\n    height: 300px;\n    overflow-y: scroll;\n    padding: 0;\n`;\n\ninterface GroupsProps {\n    groups: Group[];\n    handleGroupClicked: (group: Group) => void;\n    searchInput?: string;\n}\n\nexport const Groups: React.FC<GroupsProps> = ({\n    groups,\n    handleGroupClicked,\n    searchInput,\n}: GroupsProps) => {\n    return (\n        <StyledUl>\n            {searchInput !== undefined\n                ? groups\n                      .filter((group: Group) => {\n                          if (searchInput !== undefined) {\n                              if (searchInput === '') {\n                                  return group;\n                              } else if (\n                                  group.groupName != null &&\n                                  group.groupName\n                                      .toLowerCase()\n                                      .includes(searchInput.toLocaleLowerCase())\n                              ) {\n                                  return group;\n                              }\n                          }\n                      })\n                      .map((group: Group) => (\n                          <GroupCard\n                              key={group.groupId}\n                              group={group}\n                              handleGroupClicked={handleGroupClicked}\n                          />\n                      ))\n                : groups.map((group: Group) => (\n                      <GroupCard\n                          key={group.groupId}\n                          group={group}\n                          handleGroupClicked={handleGroupClicked}\n                      />\n                  ))}\n        </StyledUl>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}