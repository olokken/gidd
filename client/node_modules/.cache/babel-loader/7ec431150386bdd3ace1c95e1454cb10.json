{"ast":null,"code":"import _objectSpread from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState,useContext}from'react';import styled from'styled-components';import{TextField,Button}from'@material-ui/core';import FriendCard from'./FriendCard';import Autocomplete from'@material-ui/lab/Autocomplete';import AddBox from'@material-ui/icons/AddBox';import axios from'../../Axios';import{UserContext}from'../../UserContext';import config from'../../Config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    margin-left: 1rem;\\n    margin-top: 1rem;\\n    width: 95%;\\n\"])));var StyledUl=styled.ul(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    height: 300px;\\n    overflow-y: scroll;\\n    padding: 0;\\n\"])));var FriendList=function FriendList(_ref){var users=_ref.users,friends=_ref.friends,updateFriends=_ref.updateFriends;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchInput=_useState2[0],setSearchInput=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectInput=_useState4[0],setSelectInput=_useState4[1];var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),searchValue=_React$useState2[0],setSearchValue=_React$useState2[1];var _useContext=useContext(UserContext),user=_useContext.user;var onSearchChange=function onSearchChange(event){setSearchInput(event.target.value);};var onAddFriendClick=function onAddFriendClick(){if(selectInput===null){console.log('ingen bruker valgt ');}else{postFriend(Object.values(selectInput)[0]);setSelectInput(null);setSearchValue('');}};var postFriend=function postFriend(friendId){axios.post(\"/user/\".concat(user,\"/user\"),{userId:user,friendId:friendId},config).then(function(response){JSON.stringify(response);console.log(response.data);}).then(updateFriends).catch(function(error){console.log(error.response.data);});};'';return/*#__PURE__*/_jsxs(StyledContainer,{children:[/*#__PURE__*/_jsx(Autocomplete,{id:\"free-solo-demo\",value:selectInput,noOptionsText:\"ingen valg\",onChange:function onChange(event,newValue){setSelectInput(newValue);},inputValue:searchValue,onInputChange:function onInputChange(event,newInputValue){setSearchValue(newInputValue);},options:users,getOptionLabel:function getOptionLabel(options){return options.firstName+' '+options.surname;},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Legg til ny venn\",margin:\"normal\",variant:\"outlined\"}));}}),/*#__PURE__*/_jsxs(Button,{onClick:onAddFriendClick,disabled:selectInput===null,variant:\"contained\",color:\"primary\",style:{width:'100%'},children:[\"Legg til venn\",/*#__PURE__*/_jsx(AddBox,{style:{marginLeft:'8px'}})]}),/*#__PURE__*/_jsx(TextField,{style:{marginTop:'5px'},onChange:onSearchChange,fullWidth:true,label:\"S\\xF8k etter venner\",variant:\"outlined\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Dine venner\"}),/*#__PURE__*/_jsx(StyledUl,{children:friends.filter(function(friend){if(searchInput===''){return friend;}else if(friend.firstName+' '+friend.surname!=null&&(friend.firstName+' '+friend.surname).toLowerCase().includes(searchInput.toLocaleLowerCase())){return friend;}}).map(function(friend){return/*#__PURE__*/_jsx(FriendCard,{updateFriends:updateFriends,friend:friend},friend.userId);})})]});};export default FriendList;","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/GroupsAndFriendsComponents/FriendList.tsx"],"names":["React","useState","useContext","styled","TextField","Button","FriendCard","Autocomplete","AddBox","axios","UserContext","config","StyledContainer","div","StyledUl","ul","FriendList","users","friends","updateFriends","searchInput","setSearchInput","selectInput","setSelectInput","searchValue","setSearchValue","user","onSearchChange","event","target","value","onAddFriendClick","console","log","postFriend","Object","values","friendId","post","userId","then","response","JSON","stringify","data","catch","error","newValue","newInputValue","options","firstName","surname","params","width","marginLeft","marginTop","filter","friend","toLowerCase","includes","toLocaleLowerCase","map"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { TextField, Button } from '@material-ui/core';\nimport FriendCard from './FriendCard';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddBox from '@material-ui/icons/AddBox';\nimport User from '../../interfaces/User';\nimport axios from '../../Axios';\nimport { UserContext } from '../../UserContext';\nimport config from '../../Config';\n\nconst StyledContainer = styled.div`\n    margin-left: 1rem;\n    margin-top: 1rem;\n    width: 95%;\n`;\n\nconst StyledUl = styled.ul`\n    height: 300px;\n    overflow-y: scroll;\n    padding: 0;\n`;\n\ninterface Props {\n    users: User[];\n    friends: User[];\n    updateFriends: () => void;\n}\n\nconst FriendList = ({ users, friends, updateFriends }: Props) => {\n    const [searchInput, setSearchInput] = useState<string>('');\n    const [selectInput, setSelectInput] = useState<User | null>(null);\n    const [searchValue, setSearchValue] = React.useState('');\n    const { user } = useContext(UserContext);\n\n    const onSearchChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setSearchInput((event.target as HTMLInputElement).value);\n    };\n\n    const onAddFriendClick = () => {\n        if (selectInput === null) {\n            console.log('ingen bruker valgt ');\n        } else {\n            postFriend(Object.values(selectInput)[0]);\n            setSelectInput(null);\n            setSearchValue('');\n        }\n    };\n    const postFriend = (friendId: string) => {\n        axios\n            .post(`/user/${user}/user`, {\n                userId: user,\n                friendId: friendId,\n            }, config)\n            .then((response) => {\n                JSON.stringify(response);\n                console.log(response.data);\n            })\n            .then(updateFriends)\n            .catch((error) => {\n                console.log(error.response.data);\n            });\n    };\n''\n\n    return (\n        <StyledContainer>\n            <Autocomplete\n                id=\"free-solo-demo\"\n                value={selectInput}\n                noOptionsText=\"ingen valg\"\n                onChange={(event: any, newValue: User | null) => {\n                    setSelectInput(newValue);\n                }}\n                inputValue={searchValue}\n                onInputChange={(event, newInputValue) => {\n                    setSearchValue(newInputValue);\n                }}\n                options={users}\n                getOptionLabel={(options) =>\n                    options.firstName + ' ' + options.surname\n                }\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Legg til ny venn\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                )}\n            />\n            <Button\n                onClick={onAddFriendClick}\n                disabled={selectInput === null}\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: '100%' }}\n            >\n                Legg til venn\n                <AddBox style={{ marginLeft: '8px' }}></AddBox>\n            </Button>\n\n            <TextField\n                style={{ marginTop: '5px' }}\n                onChange={onSearchChange}\n                fullWidth={true}\n                label=\"Søk etter venner\"\n                variant=\"outlined\"\n            />\n            <h2>Dine venner</h2>\n            <StyledUl>\n                {friends\n                    .filter((friend: User) => {\n                        if (searchInput === '') {\n                            return friend;\n                        } else if (\n                            friend.firstName + ' ' + friend.surname != null &&\n                            (friend.firstName + ' ' + friend.surname)\n                                .toLowerCase()\n                                .includes(searchInput.toLocaleLowerCase())\n                        ) {\n                            return friend;\n                        }\n                    })\n                    .map((friend: User) => (\n                        <FriendCard\n                            updateFriends={updateFriends}\n                            key={friend.userId}\n                            friend={friend}\n                        />\n                    ))}\n            </StyledUl>\n        </StyledContainer>\n    );\n};\n\nexport default FriendList;\n"]},"metadata":{},"sourceType":"module"}