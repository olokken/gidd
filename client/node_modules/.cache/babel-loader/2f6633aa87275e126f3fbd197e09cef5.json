{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import{Avatar,Tooltip}from'@material-ui/core';import React,{useContext}from'react';import styled from'styled-components';import{UserContext}from'../../UserContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SendtMessage=styled.fieldset(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: left;\\n    float: left;\\n    width: 50%;\\n    height: relative;\\n    padding: 5px;\\n    background-color: primary;\\n    margin: 3px;\\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\n    border-radius: 10px;\\n\"])));var Flex=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    display:flex;\\n\"])));var RecievedMessage=styled.fieldset(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    position: left;\\n    float: right;\\n    width: 50%;\\n    height: relative;\\n    padding: 5px;\\n    background-color: none;\\n    margin: 3px;\\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\n    border-radius: 10px;\\n\"])));var StyledMessage=function StyledMessage(_ref){var message=_ref.message,userId=_ref.userId,time=_ref.time,name=_ref.name,image=_ref.image;var _useContext=useContext(UserContext),user=_useContext.user;var date=new Date(time);var MessageStyle=function MessageStyle(){if(userId==user){return/*#__PURE__*/_jsxs(RecievedMessage,{children:[/*#__PURE__*/_jsx(\"legend\",{children:name}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Avatar,{src:image}),message]})]});}else{return/*#__PURE__*/_jsxs(SendtMessage,{children:[/*#__PURE__*/_jsx(\"legend\",{children:name}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Avatar,{src:image}),message]})]});}};return/*#__PURE__*/_jsx(Tooltip,{title:date.toString(),children:MessageStyle()});};export default StyledMessage;","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/ChatComponents/StyledMessage.tsx"],"names":["Avatar","Tooltip","React","useContext","styled","UserContext","SendtMessage","fieldset","Flex","div","RecievedMessage","StyledMessage","message","userId","time","name","image","user","date","Date","MessageStyle","toString"],"mappings":"6NAAA,OAASA,MAAT,CAAiBC,OAAjB,KAAgC,mBAAhC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,KAA4B,mBAA5B,C,wFAWA,GAAMC,CAAAA,YAAY,CAAGF,MAAM,CAACG,QAAV,+VAAlB,CAaA,GAAMC,CAAAA,IAAI,CAAGJ,MAAM,CAACK,GAAV,wFAAV,CAIA,GAAMC,CAAAA,eAAe,CAAGN,MAAM,CAACG,QAAV,+VAArB,CAaA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAmD,IAAhDC,CAAAA,OAAgD,MAAhDA,OAAgD,CAAvCC,MAAuC,MAAvCA,MAAuC,CAA/BC,IAA+B,MAA/BA,IAA+B,CAAzBC,IAAyB,MAAzBA,IAAyB,CAAnBC,KAAmB,MAAnBA,KAAmB,iBACpDb,UAAU,CAACE,WAAD,CAD0C,CAC7DY,IAD6D,aAC7DA,IAD6D,CAErE,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASL,IAAT,CAAb,CAEA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA0B,CAC3C,GAAIP,MAAM,EAAII,IAAd,CAAoB,CAChB,mBACI,MAAC,eAAD,yBACI,wBAASF,IAAT,EADJ,cAEI,MAAC,IAAD,yBACI,KAAC,MAAD,EAAQ,GAAG,CAAEC,KAAb,EADJ,CAC2BJ,OAD3B,GAFJ,GADJ,CAQH,CATD,IASO,CACH,mBACI,MAAC,YAAD,yBACI,wBAASG,IAAT,EADJ,cAEI,MAAC,IAAD,yBACI,KAAC,MAAD,EAAQ,GAAG,CAAEC,KAAb,EADJ,CAC2BJ,OAD3B,GAFJ,GADJ,CAQH,CACJ,CApBD,CAsBA,mBAAO,KAAC,OAAD,EAAS,KAAK,CAAEM,IAAI,CAACG,QAAL,EAAhB,UAAkCD,YAAY,EAA9C,EAAP,CACH,CA3BD,CA6BA,cAAeT,CAAAA,aAAf","sourcesContent":["import { Avatar, Tooltip } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from '../../UserContext';\n\ninterface Props {\n    message: string;\n    name: string;\n    userId: string;\n    time: number;\n    image: string;\n}\n\n\nconst SendtMessage = styled.fieldset`\n    position: left;\n    float: left;\n    width: 50%;\n    height: relative;\n    padding: 5px;\n    background-color: primary;\n    margin: 3px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n`;\n\nconst Flex = styled.div`\n    display:flex;\n`;\n\nconst RecievedMessage = styled.fieldset`\n    position: left;\n    float: right;\n    width: 50%;\n    height: relative;\n    padding: 5px;\n    background-color: none;\n    margin: 3px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n`;\n\nconst StyledMessage = ({ message, userId, time, name, image }: Props) => {\n    const { user } = useContext(UserContext);\n    const date = new Date(time);\n\n    const MessageStyle = (): React.ReactElement => {\n        if (userId == user) {\n            return (\n                <RecievedMessage>\n                    <legend>{name}</legend>\n                    <Flex>\n                        <Avatar src={image} />{message}\n                    </Flex>\n                </RecievedMessage>\n            );\n        } else {\n            return (\n                <SendtMessage>\n                    <legend>{name}</legend>\n                    <Flex>\n                        <Avatar src={image} />{message}\n                    </Flex>\n                </SendtMessage>\n            );\n        }\n    };\n\n    return <Tooltip title={date.toString()}>{MessageStyle()}</Tooltip>;\n};\n\nexport default StyledMessage;\n"]},"metadata":{},"sourceType":"module"}