{"ast":null,"code":"import _slicedToArray from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useEffect,useContext}from'react';import styled from'styled-components';import MapComponent from'../components/MapComponents/MapComponent';import MapMarker from'../components/MapComponents/MapMarker';import GeoSuggest from'../components/MapComponents/GeoSuggest';import axios from'../Axios';import{UserContext}from'../UserContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    justify-content: center;\\n\"])));var Map=function Map(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),activities=_useState2[0],setActivities=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),defaultCenter=_useState4[0],setDefaultCenter=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),markers=_useState6[0],setMarkers=_useState6[1];var _useContext=useContext(UserContext),user=_useContext.user;var getCoordinates=function getCoordinates(){fetch(\"https://geolocation-db.com/json/\".concat(process.env.REACT_APP_GEOLOCATION_KEY)).then(function(response){return response.json();}).then(function(data){if(data){var latitude=data.latitude;var longitude=data.longitude;console.log(latitude+', '+longitude);setDefaultCenter({lat:latitude,lng:longitude});}else{setDefaultCenter({lat:63,lng:10});}});};var _deleteActivity=function deleteActivity(id){axios.delete(\"/activity/\".concat(id)).then(loadActivities).then(function(){return window.location.reload();});};var loadActivities=function loadActivities(){axios.get(\"/activity?userId=\".concat(localStorage.getItem('userID'))).then(function(response){setActivities(response.data['activities']);}).then(function(){return setMarkers(renderMarkers);}).catch(function(error){return console.log(error);});};var register=function register(activityId){return new Promise(function(resolve){axios.delete(\"/user/\".concat(user,\"/activity/\").concat(activityId));resolve();});};var unRegister=function unRegister(activityId){return new Promise(function(resolve){axios.post('/user/activity',{userId:user,activityId:activityId});resolve();});};useEffect(function(){getCoordinates();},[]);useEffect(function(){loadActivities();},[markers]);var renderMarkers=function renderMarkers(){if(activities){return activities.map(function(act,index){return/*#__PURE__*/_jsx(MapMarker,{register:register,unRegister:unRegister,deleteActivity:function deleteActivity(id){return _deleteActivity(id);},activity:act,position:{lat:act.latitude,lng:act.longitude}},index);});}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(GeoSuggest,{onLocationChange:function onLocationChange(location){return setDefaultCenter(location);}}),defaultCenter&&/*#__PURE__*/_jsx(MapComponent,{defaultCenter:defaultCenter,width:\"100vw\",height:\"85vh\",children:markers})]});};export default Map;","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/containers/Map.tsx"],"names":["React","useState","useEffect","useContext","styled","MapComponent","MapMarker","GeoSuggest","axios","UserContext","Container","div","Map","activities","setActivities","defaultCenter","setDefaultCenter","markers","setMarkers","user","getCoordinates","fetch","process","env","REACT_APP_GEOLOCATION_KEY","then","response","json","data","latitude","longitude","console","log","lat","lng","deleteActivity","id","delete","loadActivities","window","location","reload","get","localStorage","getItem","renderMarkers","catch","error","register","activityId","Promise","resolve","unRegister","post","userId","map","act","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport MapComponent from '../components/MapComponents/MapComponent';\nimport MapMarker from '../components/MapComponents/MapMarker';\nimport GeoSuggest from '../components/MapComponents/GeoSuggest';\nimport DefaultCenter from '../interfaces/DefaultCenter';\nimport axios from '../Axios';\nimport ActivityResponse from '../interfaces/ActivityResponse';\nimport { UserContext } from '../UserContext';\n\nconst Container = styled.div`\n    justify-content: center;\n`;\n\nconst Map = () => {\n    const [activities, setActivities] = useState<ActivityResponse[]>([]);\n    const [defaultCenter, setDefaultCenter] = useState<DefaultCenter>();\n    const [markers, setMarkers] = useState<React.ReactNode>();\n    const { user } = useContext(UserContext);\n\n    const getCoordinates = () => {\n        fetch(\n            `https://geolocation-db.com/json/${process.env.REACT_APP_GEOLOCATION_KEY}`\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                if (data) {\n                    const latitude: number = data.latitude;\n                    const longitude: number = data.longitude;\n                    console.log(latitude + ', ' + longitude);\n                    setDefaultCenter({ lat: latitude, lng: longitude });\n                } else {\n                    setDefaultCenter({ lat: 63, lng: 10 });\n                }\n            });\n    };\n\n    const deleteActivity = (id: number) => {\n        axios\n            .delete(`/activity/${id}`)\n            .then(loadActivities)\n            .then(() => window.location.reload());\n    };\n\n    const loadActivities = () => {\n        axios\n            .get(`/activity?userId=${localStorage.getItem('userID')}`)\n            .then((response) => {\n                setActivities(response.data['activities']);\n            })\n            .then(() => setMarkers(renderMarkers))\n            .catch((error) => console.log(error));\n    };\n\n    const register = (activityId: number): Promise<void> => {\n        return new Promise((resolve) => {\n            axios.delete(`/user/${user}/activity/${activityId}`);\n            resolve();\n        });\n    };\n\n    const unRegister = (activityId: number): Promise<void> => {\n        return new Promise((resolve) => {\n            axios.post('/user/activity', {\n                userId: user,\n                activityId: activityId,\n            });\n            resolve();\n        });\n    };\n\n    useEffect(() => {\n        getCoordinates();\n    }, []);\n\n    useEffect(() => {\n        loadActivities();\n    }, [markers]);\n\n    const renderMarkers = (): React.ReactNode[] | undefined => {\n        if (activities) {\n            return activities.map((act: ActivityResponse, index: number) => {\n                return (\n                    <MapMarker\n                        register={register}\n                        unRegister={unRegister}\n                        deleteActivity={(id) => deleteActivity(id)}\n                        key={index}\n                        activity={act}\n                        position={{ lat: act.latitude, lng: act.longitude }}\n                    ></MapMarker>\n                );\n            });\n        }\n    };\n\n    return (\n        <Container>\n            <GeoSuggest\n                onLocationChange={(location) => setDefaultCenter(location)}\n            ></GeoSuggest>\n            {defaultCenter && (\n                <MapComponent\n                    defaultCenter={defaultCenter}\n                    width=\"100vw\"\n                    height=\"85vh\"\n                >\n                    {markers}\n                </MapComponent>\n            )}\n        </Container>\n    );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}