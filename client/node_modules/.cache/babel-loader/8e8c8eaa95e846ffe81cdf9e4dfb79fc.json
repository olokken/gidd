{"ast":null,"code":"import _objectSpread from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Autocomplete from'@material-ui/lab/Autocomplete';import TextField from'@material-ui/core/TextField';import axios from'../../Axios';import{jsx as _jsx}from\"react/jsx-runtime\";var TagTextField=function TagTextField(_ref){var onTagsChange=_ref.onTagsChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tags=_useState2[0],setTags=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),currTags=_useState4[0],setCurrTags=_useState4[1];useEffect(function(){axios.get('/tag').then(function(data){setTags(data.data);});},[]);useEffect(function(){if(currTags){onTagsChange(currTags);}},[currTags]);var onChangeTags=function onChangeTags(event,newInputValue){if(newInputValue){setCurrTags(newInputValue);}};return/*#__PURE__*/_jsx(Autocomplete,{id:\"free-solo-demo\",multiple:true,options:tags.map(function(option){return option.description;}),onChange:onChangeTags,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"S\\xF8k p\\xE5 tags\",margin:\"normal\",variant:\"outlined\"}));}});};export default TagTextField;","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/FilterComponents/TagTextField.tsx"],"names":["React","useEffect","useState","Autocomplete","TextField","axios","TagTextField","onTagsChange","tags","setTags","currTags","setCurrTags","get","then","data","onChangeTags","event","newInputValue","map","option","description","params"],"mappings":"6SAAA,MAAOA,CAAAA,KAAP,EAA6BC,SAA7B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,C,2CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA6B,IAA1BC,CAAAA,YAA0B,MAA1BA,YAA0B,eACtBL,QAAQ,CAAQ,EAAR,CADc,wCACvCM,IADuC,eACjCC,OADiC,8BAEdP,QAAQ,EAFM,yCAEvCQ,QAFuC,eAE7BC,WAF6B,eAI9CV,SAAS,CAAC,UAAM,CACZI,KAAK,CAACO,GAAN,CAAU,MAAV,EAAkBC,IAAlB,CAAuB,SAACC,IAAD,CAAU,CAC7BL,OAAO,CAACK,IAAI,CAACA,IAAN,CAAP,CACH,CAFD,EAGH,CAJQ,CAIN,EAJM,CAAT,CAMAb,SAAS,CAAC,UAAM,CACZ,GAAIS,QAAJ,CAAc,CACVH,YAAY,CAACG,QAAD,CAAZ,CACH,CACJ,CAJQ,CAIN,CAACA,QAAD,CAJM,CAAT,CAMA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAA0BC,aAA1B,CAAkE,CACnF,GAAIA,aAAJ,CAAmB,CACfN,WAAW,CAACM,aAAD,CAAX,CACH,CACJ,CAJD,CAMA,mBACI,KAAC,YAAD,EACI,EAAE,CAAC,gBADP,CAEI,QAAQ,KAFZ,CAGI,OAAO,CAAET,IAAI,CAACU,GAAL,CAAS,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,WAAnB,EAAT,CAHb,CAII,QAAQ,CAAEL,YAJd,CAKI,WAAW,CAAE,qBAACM,MAAD,qBACT,KAAC,SAAD,gCACQA,MADR,MAEI,KAAK,CAAC,mBAFV,CAGI,MAAM,CAAC,QAHX,CAII,OAAO,CAAC,UAJZ,GADS,EALjB,EADJ,CAgBH,CAtCD,CAwCA,cAAef,CAAAA,YAAf","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Tag from '../../interfaces/Tag';\nimport axios from '../../Axios';\n\ninterface Props {\n    onTagsChange: (tags: string[]) => void;\n}\n\nconst TagTextField = ({ onTagsChange }: Props) => {\n    const [tags, setTags] = useState<Tag[]>([]);\n    const [currTags, setCurrTags] = useState<string[]>();\n\n    useEffect(() => {\n        axios.get('/tag').then((data) => {\n            setTags(data.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (currTags) {\n            onTagsChange(currTags);\n        }\n    }, [currTags]);\n\n    const onChangeTags = (event: ChangeEvent<any>, newInputValue: string[] | undefined) => {\n        if (newInputValue) {\n            setCurrTags(newInputValue);\n        }\n    }\n\n    return (\n        <Autocomplete\n            id=\"free-solo-demo\"\n            multiple\n            options={tags.map((option) => option.description)}\n            onChange={onChangeTags}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Søk på tags\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n            )}\n        />\n    );\n};\n\nexport default TagTextField;\n"]},"metadata":{},"sourceType":"module"}