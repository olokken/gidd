{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/containers/Activities.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport ActivityForm from '../components/ActivityComponents/ActivityForm';\nimport styled from 'styled-components';\nimport SideFilter from '../components/FilterComponents/SideFilter';\nimport SortMenu from '../components/SortingComponents/SortMenu';\nimport ActivityGrid from '../components/ActivityComponents/ActivityGrid';\nimport Popup from '../components/Popup';\nimport AddButton from '../components/ActivityComponents/AddButton';\nimport { Drawer, Button } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { FilterFunctions } from '../components/FilterComponents/FilterFunctions';\nimport axios from '../Axios';\nimport { UserContext } from '../UserContext';\nimport { SortFunctions } from '../components/SortingComponents/SortingFunctions';\nimport config from '../Config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    margin-left: 10px;\n    width: 100%;\n`;\n_c = Container;\nconst AddAndSort = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    @media only screen and (max-width: 951px) {\n        flex-direction: column-reverse;\n    }\n`;\n_c2 = AddAndSort;\nconst View = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 75%;\n    margin-left: 3rem;\n    margin-top: 10px;\n    margin-right: 3rem;\n`;\n_c3 = View;\n\nconst Activities = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(UserContext);\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false\n  });\n  const [activities, setActivities] = useState([]);\n  const [currentActivities, setCurrentActivities] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [titleSearch, setTitleSearch] = useState('');\n  const [showMine, setShowMine] = useState(false);\n  const [showFuture, setShowFuture] = useState(false);\n  const [distance, setDistance] = useState();\n  const [fromTime, setFromTime] = useState(new Date());\n  const [toTime, setToTime] = useState(new Date());\n  const [capacity, setCapacity] = useState([0, 20]);\n  const [tags, setTags] = useState();\n  const [activityLevel, setActivityLevel] = useState({\n    Low: true,\n    Medium: true,\n    High: true\n  });\n  const [location, setLocation] = useState();\n  const [sortValue, setSortValue] = useState(-1);\n\n  const register = activityId => {\n    console.log(activityId + ' ' + user);\n    return new Promise(resolve => {\n      axios.post('/user/activity', {\n        userId: user,\n        activityId: activityId\n      }, config).then(() => loadActivities());\n      resolve();\n    });\n  };\n\n  const unRegister = activityId => {\n    return new Promise(resolve => {\n      axios.delete(`/user/${user}/activity/${activityId}`, config).then(() => loadActivities());\n      resolve();\n    });\n  };\n\n  useEffect(() => {\n    if (activities) {\n      setCurrentActivities(activities);\n      let filteredActivities = FilterFunctions.titleFilter(activities, titleSearch);\n      filteredActivities = FilterFunctions.showMyActivities(filteredActivities, showMine, user);\n      filteredActivities = FilterFunctions.showFutureActivities(filteredActivities, showFuture);\n      filteredActivities = FilterFunctions.changeCapacity(filteredActivities, capacity);\n      filteredActivities = FilterFunctions.dateToFilter(filteredActivities, new Date(toTime));\n      filteredActivities = FilterFunctions.dateFromFilter(filteredActivities, new Date(fromTime));\n      filteredActivities = FilterFunctions.activityLevelFilter(filteredActivities, activityLevel);\n      filteredActivities = FilterFunctions.tagFilter(filteredActivities, tags);\n      filteredActivities = FilterFunctions.distanceFilter(filteredActivities, distance, location);\n      setCurrentActivities(filteredActivities);\n    }\n  }, [titleSearch, activities, showFuture, showMine, capacity, fromTime, toTime, activityLevel, tags, distance]);\n  const {\n    mobileView,\n    drawerOpen\n  } = state;\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 951 ? setState(prevState => ({ ...prevState,\n        mobileView: true\n      })) : setState(prevState => ({ ...prevState,\n        mobileView: false\n      }));\n    };\n\n    setResponsiveness();\n    window.addEventListener('resize', () => setResponsiveness());\n    setCoordinates();\n  }, []);\n\n  const onClickAddButton = () => {\n    setOpenPopup(!openPopup);\n  };\n\n  const deleteActivity = id => {\n    axios.delete(`/activity/${id}`, config).then(loadActivities);\n  };\n\n  const setCoordinates = () => {\n    fetch(`https://geolocation-db.com/json/${process.env.REACT_APP_GEOLOCATION_KEY}`).then(response => response.json()).then(data => {\n      if (data) {\n        const latitude = data.latitude;\n        const longitude = data.longitude;\n        console.log(latitude + ', ' + longitude);\n        setLocation({\n          lat: latitude,\n          lng: longitude\n        });\n      }\n    });\n  };\n\n  const reverse = () => {\n    setCurrentActivities([...currentActivities].reverse());\n  };\n\n  const loadActivities = () => {\n    axios.get(`/activity?userId=${localStorage.getItem('userID')}`).then(response => {\n      response.data;\n      setActivities(response.data['activities']);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    if (sortValue == 1) {\n      console.log('velger sort 1');\n      const sortert = SortFunctions.comingSort(currentActivities);\n      setCurrentActivities(sortert);\n    } else if (sortValue == 2) {\n      console.log('velger sort 2');\n      const sortert = SortFunctions.distanceSort(currentActivities, location);\n      setCurrentActivities(sortert);\n    } else if (sortValue == 3) {\n      console.log('velger sort 3');\n      const sortert = SortFunctions.capacitySort(currentActivities);\n      setCurrentActivities(sortert);\n    } else if (sortValue == 4) {\n      console.log('velger sort 4');\n      const sortert = SortFunctions.activityLevelSort(currentActivities);\n      setCurrentActivities(sortert);\n    }\n  }, [sortValue]);\n  useEffect(loadActivities, [openPopup]);\n\n  const displayDesktop = () => {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '20%'\n        },\n        children: /*#__PURE__*/_jsxDEV(SideFilter, {\n          onDistanceChange: dist => setDistance(dist),\n          onTimeFromChange: time => setFromTime(time),\n          onTimeToChange: time => {\n            setToTime(time);\n          },\n          onTitleSearch: title => setTitleSearch(title),\n          onLevelChange: level => setActivityLevel(level),\n          onShowFuture: showFuture => setShowFuture(showFuture),\n          onShowMine: showMine => setShowMine(showMine),\n          onCapacityChange: range => setCapacity(range),\n          onTagsChange: tags => setTags(tags)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(AddAndSort, {\n          children: [/*#__PURE__*/_jsxDEV(SortMenu, {\n            onSortChange: val => {\n              setSortValue(val);\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: reverse,\n              children: \"Reverser n\\xE5v\\xE6rende liste\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n            onClick: onClickAddButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Popup, {\n            title: \"Legg til aktivitet\",\n            openPopup: openPopup,\n            setOpenPopup: setOpenPopup,\n            maxWidth: \"lg\",\n            children: /*#__PURE__*/_jsxDEV(ActivityForm, {\n              openPopup: openPopup,\n              setOpenPopup: setOpenPopup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActivityGrid, {\n          register: register,\n          unRegister: unRegister,\n          deleteActivity: id => deleteActivity(id),\n          activities: currentActivities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this);\n  };\n\n  const displayMobile = () => {\n    const handleDrawerOpen = () => setState(prevState => ({ ...prevState,\n      drawerOpen: true\n    }));\n\n    const handleDrawerClose = () => setState(prevState => ({ ...prevState,\n      drawerOpen: false\n    }));\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(AddAndSort, {\n          children: [/*#__PURE__*/_jsxDEV(SortMenu, {\n            onSortChange: val => setSortValue(val),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: reverse,\n              children: \"Reverser n\\xE5v\\xE6rende liste\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              border: '1px solid lightgrey',\n              marginTop: '5px'\n            },\n            onClick: handleDrawerOpen,\n            children: \"Filtrer s\\xF8k\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n            style: {\n              width: '50px'\n            },\n            anchor: 'bottom',\n            open: drawerOpen,\n            onClose: handleDrawerClose,\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                position: 'absolute',\n                top: '5px',\n                right: '0'\n              },\n              onClick: handleDrawerClose,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Fliter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              style: {\n                marginTop: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(SideFilter, {\n                onDistanceChange: dist => setDistance(dist),\n                onTimeFromChange: time => setFromTime(time),\n                onTimeToChange: time => {\n                  setToTime(time);\n                },\n                onTitleSearch: title => setTitleSearch(title),\n                onShowFuture: showFuture => setShowFuture(showFuture),\n                onShowMine: showMine => setShowMine(showMine),\n                onCapacityChange: range => setCapacity(range),\n                onTagsChange: tags => setTags(tags),\n                onLevelChange: level => setActivityLevel(level)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n            onClick: onClickAddButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Popup, {\n            title: \"Legg til aktivitet\",\n            openPopup: openPopup,\n            setOpenPopup: setOpenPopup,\n            maxWidth: \"md\",\n            children: /*#__PURE__*/_jsxDEV(ActivityForm, {\n              openPopup: openPopup,\n              setOpenPopup: setOpenPopup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActivityGrid, {\n          register: register,\n          unRegister: unRegister,\n          deleteActivity: id => deleteActivity(id),\n          activities: currentActivities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mobileView ? displayMobile() : displayDesktop()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Activities, \"scnuvz2OrEIeKGWFzCIYkxF1h7U=\");\n\n_c4 = Activities;\nexport default Activities;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"AddAndSort\");\n$RefreshReg$(_c3, \"View\");\n$RefreshReg$(_c4, \"Activities\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/containers/Activities.tsx"],"names":["React","useContext","useEffect","useState","ActivityForm","styled","SideFilter","SortMenu","ActivityGrid","Popup","AddButton","Drawer","Button","IconButton","Divider","CloseIcon","FilterFunctions","axios","UserContext","SortFunctions","config","Container","div","AddAndSort","View","Activities","user","state","setState","mobileView","drawerOpen","activities","setActivities","currentActivities","setCurrentActivities","openPopup","setOpenPopup","titleSearch","setTitleSearch","showMine","setShowMine","showFuture","setShowFuture","distance","setDistance","fromTime","setFromTime","Date","toTime","setToTime","capacity","setCapacity","tags","setTags","activityLevel","setActivityLevel","Low","Medium","High","location","setLocation","sortValue","setSortValue","register","activityId","console","log","Promise","resolve","post","userId","then","loadActivities","unRegister","delete","filteredActivities","titleFilter","showMyActivities","showFutureActivities","changeCapacity","dateToFilter","dateFromFilter","activityLevelFilter","tagFilter","distanceFilter","setResponsiveness","window","innerWidth","prevState","addEventListener","setCoordinates","onClickAddButton","deleteActivity","id","fetch","process","env","REACT_APP_GEOLOCATION_KEY","response","json","data","latitude","longitude","lat","lng","reverse","get","localStorage","getItem","catch","error","sortert","comingSort","distanceSort","capacitySort","activityLevelSort","displayDesktop","width","dist","time","title","level","range","val","displayMobile","handleDrawerOpen","handleDrawerClose","border","marginTop","anchor","open","onClose","position","top","right","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport ActivityForm from '../components/ActivityComponents/ActivityForm';\nimport styled from 'styled-components';\nimport SideFilter from '../components/FilterComponents/SideFilter';\nimport SortMenu from '../components/SortingComponents/SortMenu';\nimport ActivityResponse from '../interfaces/ActivityResponse';\nimport ActivityGrid from '../components/ActivityComponents/ActivityGrid';\nimport Popup from '../components/Popup';\nimport AddButton from '../components/ActivityComponents/AddButton';\nimport { Drawer, Button } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { FilterFunctions } from '../components/FilterComponents/FilterFunctions';\nimport axios from '../Axios';\nimport ActivityLevels from '../interfaces/ActivityLevels';\nimport { UserContext } from '../UserContext';\nimport DefaultCenter from '../interfaces/DefaultCenter';\nimport { SortFunctions } from '../components/SortingComponents/SortingFunctions';\nimport config from '../Config';\n\n\nconst Container = styled.div`\n    display: flex;\n    margin-left: 10px;\n    width: 100%;\n`;\n\nconst AddAndSort = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    @media only screen and (max-width: 951px) {\n        flex-direction: column-reverse;\n    }\n`;\n\nconst View = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 75%;\n    margin-left: 3rem;\n    margin-top: 10px;\n    margin-right: 3rem;\n`;\n\nconst Activities = () => {\n    const { user } = useContext(UserContext);\n    const [state, setState] = useState({\n        mobileView: false,\n        drawerOpen: false,\n    });\n    const [activities, setActivities] = useState<ActivityResponse[]>([]);\n    const [currentActivities, setCurrentActivities] = useState<\n        ActivityResponse[]\n    >([]);\n    const [openPopup, setOpenPopup] = useState<boolean>(false);\n    const [titleSearch, setTitleSearch] = useState<string>('');\n    const [showMine, setShowMine] = useState<boolean>(false);\n    const [showFuture, setShowFuture] = useState<boolean>(false);\n    const [distance, setDistance] = useState<number>();\n    const [fromTime, setFromTime] = useState<Date>(new Date());\n    const [toTime, setToTime] = useState<Date>(new Date());\n    const [capacity, setCapacity] = useState<number[]>([0, 20]);\n    const [tags, setTags] = useState<string[]>();\n    const [activityLevel, setActivityLevel] = useState<ActivityLevels>({\n        Low: true,\n        Medium: true,\n        High: true,\n    });\n    const [location, setLocation] = useState<DefaultCenter>();\n    const [sortValue, setSortValue] = useState<number>(-1);\n\n    const register = (activityId: number): Promise<void> => {\n        console.log(activityId + ' ' + user);\n        return new Promise((resolve) => {\n            axios\n                .post('/user/activity', {\n                    userId: user,\n                    activityId: activityId,\n                }, config)\n                .then(() => loadActivities());\n            resolve();\n        });\n    };\n\n    const unRegister = (activityId: number): Promise<void> => {\n        return new Promise((resolve) => {\n            axios\n                .delete(`/user/${user}/activity/${activityId}`, config)\n                .then(() => loadActivities());\n            resolve();\n        });\n    };\n\n    useEffect(() => {\n        if (activities) {\n            setCurrentActivities(activities);\n            let filteredActivities = FilterFunctions.titleFilter(\n                activities,\n                titleSearch\n            );\n            filteredActivities = FilterFunctions.showMyActivities(\n                filteredActivities,\n                showMine,\n                user\n            );\n            filteredActivities = FilterFunctions.showFutureActivities(\n                filteredActivities,\n                showFuture\n            );\n            filteredActivities = FilterFunctions.changeCapacity(\n                filteredActivities,\n                capacity\n            );\n            filteredActivities = FilterFunctions.dateToFilter(\n                filteredActivities,\n                new Date(toTime)\n            );\n            filteredActivities = FilterFunctions.dateFromFilter(\n                filteredActivities,\n                new Date(fromTime)\n            );\n            filteredActivities = FilterFunctions.activityLevelFilter(\n                filteredActivities,\n                activityLevel\n            );\n            filteredActivities = FilterFunctions.tagFilter(\n                filteredActivities,\n                tags\n            );\n            filteredActivities = FilterFunctions.distanceFilter(\n                filteredActivities,\n                distance,\n                location\n            );\n            setCurrentActivities(filteredActivities);\n        }\n    }, [\n        titleSearch,\n        activities,\n        showFuture,\n        showMine,\n        capacity,\n        fromTime,\n        toTime,\n        activityLevel,\n        tags,\n        distance,\n    ]);\n\n    const { mobileView, drawerOpen } = state;\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 951\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\n                : setState((prevState) => ({\n                      ...prevState,\n                      mobileView: false,\n                  }));\n        };\n        setResponsiveness();\n        window.addEventListener('resize', () => setResponsiveness());\n        setCoordinates();\n    }, []);\n\n    const onClickAddButton = () => {\n        setOpenPopup(!openPopup);\n    };\n\n    const deleteActivity = (id: number) => {\n        axios.delete(`/activity/${id}`, config).then(loadActivities);\n    };\n\n    const setCoordinates = () => {\n        fetch(\n            `https://geolocation-db.com/json/${process.env.REACT_APP_GEOLOCATION_KEY}`\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                if (data) {\n                    const latitude: number = data.latitude;\n                    const longitude: number = data.longitude;\n                    console.log(latitude + ', ' + longitude);\n                    setLocation({ lat: latitude, lng: longitude });\n                }\n            });\n    };\n\n    const reverse = () => {\n        setCurrentActivities([...currentActivities].reverse());\n    };\n\n    const loadActivities = () => {\n        axios\n            .get(`/activity?userId=${localStorage.getItem('userID')}`)\n            .then((response) => {\n                response.data;\n                setActivities(response.data['activities']);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    useEffect(() => {\n        if (sortValue == 1) {\n            console.log('velger sort 1');\n            const sortert = SortFunctions.comingSort(currentActivities);\n            setCurrentActivities(sortert);\n        } else if (sortValue == 2) {\n            console.log('velger sort 2');\n            const sortert = SortFunctions.distanceSort(\n                currentActivities,\n                location\n            );\n            setCurrentActivities(sortert);\n        } else if (sortValue == 3) {\n            console.log('velger sort 3');\n            const sortert = SortFunctions.capacitySort(currentActivities);\n            setCurrentActivities(sortert);\n        } else if (sortValue == 4) {\n            console.log('velger sort 4');\n            const sortert = SortFunctions.activityLevelSort(currentActivities);\n            setCurrentActivities(sortert);\n        }\n    }, [sortValue]);\n\n    useEffect(loadActivities, [openPopup]);\n\n    const displayDesktop = () => {\n        return (\n            <Container>\n                <div style={{ width: '20%' }}>\n                    <SideFilter\n                        onDistanceChange={(dist) => setDistance(dist)}\n                        onTimeFromChange={(time) => setFromTime(time)}\n                        onTimeToChange={(time) => {\n                            setToTime(time);\n                        }}\n                        onTitleSearch={(title) => setTitleSearch(title)}\n                        onLevelChange={(level) => setActivityLevel(level)}\n                        onShowFuture={(showFuture) => setShowFuture(showFuture)}\n                        onShowMine={(showMine) => setShowMine(showMine)}\n                        onCapacityChange={(range) => setCapacity(range)}\n                        onTagsChange={(tags) => setTags(tags)}\n                    ></SideFilter>\n                </div>\n                <View>\n                    <AddAndSort>\n                        <SortMenu\n                            onSortChange={(val) => {\n                                setSortValue(val);\n                            }}\n                        >\n                            <Button onClick={reverse}>\n                                Reverser nåværende liste\n                            </Button>\n                        </SortMenu>\n                        <AddButton onClick={onClickAddButton}></AddButton>\n                        <Popup\n                            title=\"Legg til aktivitet\"\n                            openPopup={openPopup}\n                            setOpenPopup={setOpenPopup}\n                            maxWidth=\"lg\"\n                        >\n                            <ActivityForm\n                                openPopup={openPopup}\n                                setOpenPopup={setOpenPopup}\n                            />\n                        </Popup>\n                    </AddAndSort>\n                    <ActivityGrid\n                        register={register}\n                        unRegister={unRegister}\n                        deleteActivity={(id) => deleteActivity(id)}\n                        activities={currentActivities}\n                    ></ActivityGrid>\n                </View>\n            </Container>\n        );\n    };\n\n    const displayMobile = () => {\n        const handleDrawerOpen = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\n\n        const handleDrawerClose = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\n        return (\n            <Container>\n                <View>\n                    <AddAndSort>\n                        <SortMenu onSortChange={(val) => setSortValue(val)}>\n                            <Button onClick={reverse}>\n                                Reverser nåværende liste\n                            </Button>\n                        </SortMenu>\n                        <Button\n                            style={{\n                                border: '1px solid lightgrey',\n                                marginTop: '5px',\n                            }}\n                            onClick={handleDrawerOpen}\n                        >\n                            Filtrer søk\n                        </Button>\n                        <Drawer\n                            style={{ width: '50px' }}\n                            {...{\n                                anchor: 'bottom',\n                                open: drawerOpen,\n                                onClose: handleDrawerClose,\n                            }}\n                        >\n                            <br />\n                            <IconButton\n                                style={{\n                                    position: 'absolute',\n                                    top: '5px',\n                                    right: '0',\n                                }}\n                                onClick={handleDrawerClose}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                            <b style={{ textAlign: 'center' }}>Fliter</b>\n                            <Divider\n                                style={{\n                                    marginTop: '20px',\n                                }}\n                            />\n                            <div style={{ padding: '10px' }}>\n                                <SideFilter\n                                    onDistanceChange={(dist) =>\n                                        setDistance(dist)\n                                    }\n                                    onTimeFromChange={(time) =>\n                                        setFromTime(time)\n                                    }\n                                    onTimeToChange={(time) => {\n                                        setToTime(time);\n                                    }}\n                                    onTitleSearch={(title) =>\n                                        setTitleSearch(title)\n                                    }\n                                    onShowFuture={(showFuture) =>\n                                        setShowFuture(showFuture)\n                                    }\n                                    onShowMine={(showMine) =>\n                                        setShowMine(showMine)\n                                    }\n                                    onCapacityChange={(range) =>\n                                        setCapacity(range)\n                                    }\n                                    onTagsChange={(tags) => setTags(tags)}\n                                    onLevelChange={(level) =>\n                                        setActivityLevel(level)\n                                    }\n                                ></SideFilter>\n                            </div>\n                        </Drawer>\n                        <AddButton onClick={onClickAddButton}></AddButton>\n                        <Popup\n                            title=\"Legg til aktivitet\"\n                            openPopup={openPopup}\n                            setOpenPopup={setOpenPopup}\n                            maxWidth=\"md\"\n                        >\n                            <ActivityForm\n                                openPopup={openPopup}\n                                setOpenPopup={setOpenPopup}\n                            />\n                        </Popup>\n                    </AddAndSort>\n                    <ActivityGrid\n                        register={register}\n                        unRegister={unRegister}\n                        deleteActivity={(id) => deleteActivity(id)}\n                        activities={currentActivities}\n                    ></ActivityGrid>\n                </View>\n            </Container>\n        );\n    };\n\n    return <div>{mobileView ? displayMobile() : displayDesktop()}</div>;\n};\n\nexport default Activities;\n"]},"metadata":{},"sourceType":"module"}