{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/components/FilterComponents/TagTextField.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport axios from '../../Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagTextField = ({\n  onTagsChange\n}) => {\n  _s();\n\n  const [tags, setTags] = useState([]);\n  const [currTags, setCurrTags] = useState();\n  useEffect(() => {\n    axios.get('/tag').then(data => {\n      setTags(data.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (currTags) {\n      onTagsChange(currTags);\n    }\n  }, [currTags]);\n\n  const onChangeTags = (event, newInputValue) => {\n    if (newInputValue) {\n      setCurrTags(newInputValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"free-solo-demo\",\n    multiple: true,\n    options: tags.map(option => option.description),\n    onChange: onChangeTags,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"S\\xF8k p\\xE5 tags\",\n      margin: \"normal\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TagTextField, \"ojLhDesHIZn1RPNr0dN1DX6k9XI=\");\n\n_c = TagTextField;\nexport default TagTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagTextField\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/FilterComponents/TagTextField.tsx"],"names":["React","useEffect","useState","Autocomplete","TextField","axios","TagTextField","onTagsChange","tags","setTags","currTags","setCurrTags","get","then","data","onChangeTags","event","newInputValue","map","option","description","params"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;;;AAMA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AAC9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAQ,EAAR,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACO,GAAN,CAAU,MAAV,EAAkBC,IAAlB,CAAwBC,IAAD,IAAU;AAC7BL,MAAAA,OAAO,CAACK,IAAI,CAACA,IAAN,CAAP;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,QAAJ,EAAc;AACVH,MAAAA,YAAY,CAACG,QAAD,CAAZ;AACH;AACJ,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT;;AAMA,QAAMK,YAAY,GAAG,CAACC,KAAD,EAA0BC,aAA1B,KAAkE;AACnF,QAAIA,aAAJ,EAAmB;AACfN,MAAAA,WAAW,CAACM,aAAD,CAAX;AACH;AACJ,GAJD;;AAMA,sBACI,QAAC,YAAD;AACI,IAAA,EAAE,EAAC,gBADP;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,OAAO,EAAET,IAAI,CAACU,GAAL,CAAUC,MAAD,IAAYA,MAAM,CAACC,WAA5B,CAHb;AAII,IAAA,QAAQ,EAAEL,YAJd;AAKI,IAAA,WAAW,EAAGM,MAAD,iBACT,QAAC,SAAD,OACQA,MADR;AAEI,MAAA,KAAK,EAAC,mBAFV;AAGI,MAAA,MAAM,EAAC,QAHX;AAII,MAAA,OAAO,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAtCD;;GAAMf,Y;;KAAAA,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Tag from '../../interfaces/Tag';\nimport axios from '../../Axios';\n\ninterface Props {\n    onTagsChange: (tags: string[]) => void;\n}\n\nconst TagTextField = ({ onTagsChange }: Props) => {\n    const [tags, setTags] = useState<Tag[]>([]);\n    const [currTags, setCurrTags] = useState<string[]>();\n\n    useEffect(() => {\n        axios.get('/tag').then((data) => {\n            setTags(data.data);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (currTags) {\n            onTagsChange(currTags);\n        }\n    }, [currTags]);\n\n    const onChangeTags = (event: ChangeEvent<any>, newInputValue: string[] | undefined) => {\n        if (newInputValue) {\n            setCurrTags(newInputValue);\n        }\n    }\n\n    return (\n        <Autocomplete\n            id=\"free-solo-demo\"\n            multiple\n            options={tags.map((option) => option.description)}\n            onChange={onChangeTags}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Søk på tags\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n            )}\n        />\n    );\n};\n\nexport default TagTextField;\n"]},"metadata":{},"sourceType":"module"}