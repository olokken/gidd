{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect, Route } from 'react-router';\nimport axios from './Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loadingComplete, setLoadingComplete] = useState(false);\n  useEffect(() => {\n    const isLogin = async () => {\n      const id = localStorage.getItem('userID');\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          token: token\n        }\n      };\n      await axios.post(`security/token/validate`, {\n        userId: id\n      }, config).then(response => {\n        if (response.data.result === 'true') {\n          setAuthenticated(true);\n        } else {\n          setAuthenticated(false);\n        }\n      }).catch(error => {\n        console.log('Feil ved request av validering ' + error.message);\n      });\n      setLoadingComplete(true);\n    };\n\n    isLogin();\n  }, []);\n\n  if (loadingComplete) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => authenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(PrivateRoute, \"iZg4wz/Hd5+btwqaBC7e2n/hbMY=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/PrivateRoute.tsx"],"names":["React","useState","useEffect","Redirect","Route","axios","PrivateRoute","component","Component","rest","authenticated","setAuthenticated","loadingComplete","setLoadingComplete","isLogin","id","localStorage","getItem","token","config","headers","post","userId","then","response","data","result","catch","error","console","log","message","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAA4C,cAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAQA,MAAMC,YAAwC,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AACpF,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AAEAC,EAAAA,SAAS,CACL,MAAM;AACF,UAAMY,OAAO,GAAG,YAAY;AACxB,YAAMC,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX;AACA,YAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,YAAME,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACLF,UAAAA,KAAK,EAAEA;AADF;AADE,OAAf;AAKA,YAAMb,KAAK,CAACgB,IAAN,CAAY,yBAAZ,EACF;AACIC,QAAAA,MAAM,EAAEP;AADZ,OADE,EAGCI,MAHD,EAIJI,IAJI,CAICC,QAAQ,IAAI;AACf,YAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,MAA7B,EAAqC;AACjCf,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,SAFD,MAEO;AACHA,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AACJ,OAVK,EAUHgB,KAVG,CAUGC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCF,KAAK,CAACG,OAAtD;AACH,OAZK,CAAN;AAaAlB,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,KAtBD;;AAuBAC,IAAAA,OAAO;AACV,GA1BI,EA2BL,EA3BK,CAAT;;AA8BA,MAAIF,eAAJ,EAAqB;AACjB,wBACI,QAAC,KAAD,OAAWH,IAAX;AAAiB,MAAA,MAAM,EAAEuB,KAAK,IAC1BtB,aAAa,gBACT,QAAC,SAAD,OAAesB;AAAf;AAAA;AAAA;AAAA;AAAA,cADS,gBAEP,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARD,MAQO;AACH,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;AACJ,CA7CD;;GAAM1B,Y;;KAAAA,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport axios from './Axios'\n\n\n\ninterface PublicRouteProps extends RouteProps {\n    component: any;\n}\n\nconst PrivateRoute: React.FC<PublicRouteProps> = ({ component: Component, ...rest }) => {\n    const [authenticated, setAuthenticated] = useState(false);\n    const [loadingComplete, setLoadingComplete] = useState(false);\n\n    useEffect(\n        () => {\n            const isLogin = async () => {\n                const id = localStorage.getItem('userID');\n                const token = localStorage.getItem('token');\n                const config = {\n                    headers: {\n                        token: token,\n                    }\n                }\n                await axios.post(`security/token/validate`,\n                    {\n                        userId: id\n                    }, config\n                ).then(response => {\n                    if (response.data.result === 'true') {\n                        setAuthenticated(true);\n                    } else {\n                        setAuthenticated(false);\n                    }\n                }).catch(error => {\n                    console.log('Feil ved request av validering ' + error.message)\n                })\n                setLoadingComplete(true);\n            }\n            isLogin();\n        },\n        []\n    );\n\n    if (loadingComplete) {\n        return (\n            <Route {...rest} render={props => (\n                authenticated ?\n                    <Component {...props} />\n                    : <Redirect to=\"/\" />\n            )} />\n        );\n    } else {\n        return (<div>Loading</div>)\n    }\n}\n\nexport default PrivateRoute;\n\n"]},"metadata":{},"sourceType":"module"}