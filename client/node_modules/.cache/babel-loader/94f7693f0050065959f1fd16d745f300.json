{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/components/ActivityComponents/ActivityCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, CardMedia, CardContent, Typography, Grid, Tooltip, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport hiking from '../../assets/hiking.jpg';\nimport UserAvatar from '../../components/UserAvatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  cutText: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    height: '1.2em',\n    whiteSpace: 'nowrap',\n    cursor: 'pointer'\n  }\n});\nconst CardInformation = styled.div`\n    height: 100%;\n\n    :hover {\n        background-color: #ebebeb;\n    }\n`;\n_c = CardInformation;\nconst TitleArea = styled.div`\n    flex: 1;\n    padding: 15px;\n    color: white;\n    background-color: #f44336;\n`;\n_c2 = TitleArea;\n\nconst ActivityCard = ({\n  activity,\n  openPopup,\n  setOpenPopup,\n  setActivity\n}) => {\n  _s();\n\n  const participants = new String(activity.registeredParticipants.length);\n  const fullCapacity = new String(activity.capacity);\n  const comparison = new String(participants + '/' + fullCapacity);\n  const date = new Date(activity.time).toLocaleDateString() + ', ' + new Date(activity.time - 7200000).toLocaleTimeString();\n  const classes = useStyles();\n\n  const onClickActivity = () => {\n    setOpenPopup(!openPopup);\n    console.log(activity);\n    setActivity(activity);\n  };\n\n  const showActivityLevel = actLevel => {\n    if (actLevel === 'HIGH') {\n      return 'Høyt';\n    } else if (actLevel === 'MEDIUM') {\n      return 'Middels';\n    } else if (actLevel === 'LOW') {\n      return 'Lavt';\n    }\n  };\n\n  const picture = () => {\n    if (activity.image.length > 40) {\n      return activity.image;\n    }\n\n    return hiking;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    onClick: onClickActivity,\n    style: {\n      height: '20rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardInformation, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: 'Image related to the activity' + activity.title,\n            height: \"140\",\n            image: picture() // hente bildet frå aktiviteta\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TitleArea, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          wrap: \"nowrap\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h3\",\n              children: activity.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              variant: \"outlined\",\n              size: \"small\",\n              label: comparison,\n              style: {\n                backgroundColor: '#ffa6a0',\n                borderBlockEndWidth: '0px',\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              variant: \"outlined\",\n              size: \"small\",\n              label: showActivityLevel(activity.activityLevel),\n              style: {\n                backgroundColor: '#ffa6a0',\n                borderBlockEndWidth: '0px',\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          wrap: \"nowrap\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: activity.user.firstname,\n              children: /*#__PURE__*/_jsxDEV(UserAvatar, {\n                user: activity.user,\n                type: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.cutText,\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          style: {\n            color: 'black'\n          },\n          children: activity.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivityCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ActivityCard;\nexport default ActivityCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CardInformation\");\n$RefreshReg$(_c2, \"TitleArea\");\n$RefreshReg$(_c3, \"ActivityCard\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/ActivityComponents/ActivityCard.tsx"],"names":["Card","CardMedia","CardContent","Typography","Grid","Tooltip","Chip","makeStyles","React","styled","hiking","UserAvatar","useStyles","cutText","textOverflow","overflow","height","whiteSpace","cursor","CardInformation","div","TitleArea","ActivityCard","activity","openPopup","setOpenPopup","setActivity","participants","String","registeredParticipants","length","fullCapacity","capacity","comparison","date","Date","time","toLocaleDateString","toLocaleTimeString","classes","onClickActivity","console","log","showActivityLevel","actLevel","picture","image","title","backgroundColor","borderBlockEndWidth","color","activityLevel","user","firstname","description"],"mappings":"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","sourcesContent":["import {\n    Card,\n    CardMedia,\n    CardContent,\n    Typography,\n    Grid,\n    Tooltip,\n    Chip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport hiking from '../../assets/hiking.jpg';\nimport ActivityResponse from '../../interfaces/ActivityResponse';\nimport UserAvatar from '../../components/UserAvatar'\n\nconst useStyles = makeStyles({\n    cutText: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        height: '1.2em',\n        whiteSpace: 'nowrap',\n        cursor:'pointer'\n    },\n});\n\nconst CardInformation = styled.div`\n    height: 100%;\n\n    :hover {\n        background-color: #ebebeb;\n    }\n`;\nconst TitleArea = styled.div`\n    flex: 1;\n    padding: 15px;\n    color: white;\n    background-color: #f44336;\n`;\n\ninterface Props {\n    activity: ActivityResponse;\n    openPopup: boolean;\n    setOpenPopup: React.Dispatch<React.SetStateAction<boolean>>;\n    setActivity: any;\n}\n\nconst ActivityCard = ({\n    activity,\n    openPopup,\n    setOpenPopup,\n    setActivity,\n}: Props) => {\n    const participants = new String(activity.registeredParticipants.length);\n    const fullCapacity = new String(activity.capacity);\n    const comparison = new String(participants + '/' + fullCapacity);\n    const date = new Date(activity.time).toLocaleDateString() + ', ' + new Date(activity.time - 7200000).toLocaleTimeString();\n    const classes = useStyles();\n\n    const onClickActivity = () => {\n        setOpenPopup(!openPopup);\n        console.log(activity)\n        setActivity(activity);\n    };\n\n    const showActivityLevel = (actLevel: string) => {\n        if (actLevel === 'HIGH') {\n            return 'Høyt'\n        } else if (actLevel === 'MEDIUM') {\n            return 'Middels'\n        } else if (actLevel === 'LOW') {\n            return 'Lavt'\n        }\n    }\n\n    const picture = (): any => {\n        if (activity.image.length > 40) {\n            return activity.image;\n        }\n        return hiking;\n    };\n    return (\n        <Card\n            onClick={onClickActivity}\n            style={{\n                height: '20rem',\n            }}\n        >\n            <CardInformation>\n                <Grid>\n                    <Grid item>\n                        <CardMedia\n                            component=\"img\"\n                            alt={\n                                'Image related to the activity' + activity.title\n                            }\n                            height=\"140\"\n                            image={picture()} // hente bildet frå aktiviteta\n                        />\n                    </Grid>\n                </Grid>\n                <TitleArea>\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item xs={8}>\n                            <Typography\n                                gutterBottom\n                                variant=\"h5\"\n                                component=\"h3\"\n                            >\n                                {activity.title}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={comparison}\n                                style={{\n                                    backgroundColor: '#ffa6a0',\n                                    borderBlockEndWidth: '0px',\n                                    color: 'white',\n                                }}\n                            />\n                            <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={showActivityLevel(activity.activityLevel)}\n                                style={{\n                                    backgroundColor: '#ffa6a0',\n                                    borderBlockEndWidth: '0px',\n                                    color: 'white',\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </TitleArea>\n                <CardContent>\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <Tooltip title={activity.user.firstname}>\n                                <UserAvatar user={activity.user} type='small'></UserAvatar>\n                            </Tooltip>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                component=\"p\"\n                            >\n                                {date}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Typography\n                        className={classes.cutText}\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                        style={{ color: 'black' }}\n                    >\n                        {activity.description}\n                    </Typography>\n                </CardContent>\n            </CardInformation>\n        </Card>\n    );\n};\n\nexport default ActivityCard;\n"]},"metadata":{},"sourceType":"module"}