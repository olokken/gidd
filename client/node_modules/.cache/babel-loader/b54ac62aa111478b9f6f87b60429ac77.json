{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/components/ChatComponents/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Drawer, Grid, TextField } from '@material-ui/core';\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport StyledMessage from './StyledMessage';\nimport axios from '../../Axios';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBox = styled.div`\n    height: 70vh;\n    max-width: 80vh;\n    overflow: hidden;\n    overflow-y: scroll;\n    margin-top: 10vh;\n`;\n_c = MessageBox;\nconst SendMessage = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 95%;\n`;\n_c2 = SendMessage;\n\nconst Chat = ({\n  open,\n  close,\n  activityId\n}) => {\n  _s();\n\n  const [message, setMessage] = useState();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [chat, setChat] = useState([]);\n  const socket = useRef();\n  useEffect(() => {\n    setChat([]);\n\n    if (open) {\n      axios.get(`/chat/${activityId}`).then(response => {\n        let sortedList = response.data['messages'];\n        sortedList = [...sortedList].sort((mes1, mes2) => mes1.timestamp - mes2.timestamp);\n        setChatHistory(sortedList);\n      });\n      socketConn();\n    }\n  }, [open]);\n\n  const socketConn = async () => {\n    const so = await new SockJS('http://13.51.58.86:8080/ws');\n    socket.current = await Stomp.over(so);\n    socket.current.connect({}, () => {\n      socket.current.subscribe(`/client/chat/${activityId}`, event => {\n        setChat([...chat, JSON.parse(event.body)]);\n      });\n    });\n  };\n\n  const subscribeAndOpen = async () => {\n    if (socket.current) {\n      if (socket.current.connected) {\n        socket.current.subscribe(`/client/chat/${activityId}`, event => {\n          console.log(JSON.parse(event.body));\n          setChat([...chat, JSON.parse(event.body)]);\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    subscribeAndOpen();\n    console.log(chat.length);\n  }, [socket, chat]);\n\n  const sendMessage = () => {\n    if (socket.current && message !== '') {\n      socket.current.send(`/server/chat/${activityId}`, {}, JSON.stringify({\n        userId: localStorage.getItem('userID'),\n        message: message\n      }));\n      setMessage('');\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [chat]);\n\n  const onKeyDown = e => {\n    if (e.code === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  const mapHistoryAndChat = () => {\n    const history = chatHistory.map((msg, index) => {\n      return /*#__PURE__*/_jsxDEV(StyledMessage, {\n        name: msg.user.firstName,\n        time: msg.timestamp,\n        userId: msg.user.userId,\n        message: msg.message,\n        image: msg.user.image\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this);\n    });\n    const newMessages = chat.map((msg, index) => {\n      return /*#__PURE__*/_jsxDEV(StyledMessage, {\n        name: msg.user.firstName,\n        time: msg.timestamp,\n        userId: msg.user.userId,\n        message: msg.message,\n        image: msg.user.image\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this);\n    });\n    return [...history, ...newMessages];\n  };\n\n  const scrollToBottom = () => {\n    const messagebox = document.getElementById('chat');\n\n    if (messagebox) {\n      messagebox.scrollTop = messagebox.scrollHeight;\n    }\n  };\n\n  const onChangeMessage = event => {\n    const msg = event.target.value;\n    setMessage(msg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"persistent\",\n    anchor: \"right\",\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            position: 'absolute',\n            top: '5px',\n            left: '20px'\n          },\n          children: \"CHAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            position: 'absolute',\n            top: '20px',\n            right: '20px'\n          },\n          onClick: () => {\n            close();\n\n            if (socket.current) {\n              socket.current.disconnect();\n            }\n          },\n          children: \"Lukk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: true,\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          container: true,\n          direction: \"column\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(MessageBox, {\n              id: \"chat\",\n              children: mapHistoryAndChat()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(SendMessage, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                onKeyDown: onKeyDown,\n                onChange: onChangeMessage,\n                value: message,\n                style: {\n                  width: '90%',\n                  marginLeft: '1rem',\n                  height: '5rem'\n                },\n                label: \"Send Melding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                style: {\n                  width: '10%',\n                  height: '10%',\n                  marginLeft: '0.5rem'\n                },\n                onClick: sendMessage,\n                children: /*#__PURE__*/_jsxDEV(SendRoundedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"M5b8okbrPn7IMKY51y7EyRPhDMU=\");\n\n_c3 = Chat;\nexport default Chat;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MessageBox\");\n$RefreshReg$(_c2, \"SendMessage\");\n$RefreshReg$(_c3, \"Chat\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/ChatComponents/Chat.tsx"],"names":["Button","Drawer","Grid","TextField","React","useEffect","useState","useRef","styled","SendRoundedIcon","StyledMessage","axios","SockJS","Stomp","MessageBox","div","SendMessage","Chat","open","close","activityId","message","setMessage","chatHistory","setChatHistory","chat","setChat","socket","get","then","response","sortedList","data","sort","mes1","mes2","timestamp","socketConn","so","current","over","connect","subscribe","event","JSON","parse","body","subscribeAndOpen","connected","console","log","length","sendMessage","send","stringify","userId","localStorage","getItem","scrollToBottom","onKeyDown","e","code","mapHistoryAndChat","history","map","msg","index","user","firstName","image","newMessages","messagebox","document","getElementById","scrollTop","scrollHeight","onChangeMessage","target","value","position","top","left","right","disconnect","width","marginLeft","height"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Drawer,\n    Grid,\n    TextField,\n} from '@material-ui/core';\nimport React, {\n    ChangeEvent,\n    useEffect,\n    useState,\n    useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport StyledMessage from './StyledMessage';\nimport axios from '../../Axios';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport MessageResponse from '../../interfaces/MessageResponse';\n\n\nconst MessageBox = styled.div`\n    height: 70vh;\n    max-width: 80vh;\n    overflow: hidden;\n    overflow-y: scroll;\n    margin-top: 10vh;\n`;\n\nconst SendMessage = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 95%;\n`;\n\ninterface Props {\n    open: boolean;\n    close: () => void;\n    activityId: number;\n}\n\nconst Chat = ({ open, close, activityId }: Props) => {\n    const [message, setMessage] = useState<string>();\n    const [chatHistory, setChatHistory] = useState<MessageResponse[]>([]);\n    const [chat, setChat] = useState<MessageResponse[]>([]);\n    const socket = useRef<any>();\n\n    useEffect(() => {\n        setChat([]);\n        if (open) {\n            axios.get(`/chat/${activityId}`).then((response) => {\n                let sortedList: MessageResponse[] = response.data['messages'];\n                sortedList = [...sortedList].sort(\n                    (mes1, mes2) => mes1.timestamp - mes2.timestamp\n                );\n                setChatHistory(sortedList);\n            });\n            socketConn();\n        }\n    }, [open]);\n\n    const socketConn = async () => {\n        const so = await new SockJS('http://13.51.58.86:8080/ws');\n        socket.current = await Stomp.over(so);\n        socket.current.connect({}, () => {\n            socket.current.subscribe(\n                `/client/chat/${activityId}`,\n                (event: any) => {\n                    setChat([...chat, JSON.parse(event.body)]);\n                }\n            );\n        });\n    };\n\n    const subscribeAndOpen = async () => {\n        if (socket.current) {\n            if (socket.current.connected) {\n                socket.current.subscribe(\n                    `/client/chat/${activityId}`,\n                    (event: any) => {\n                        console.log(JSON.parse(event.body));\n                        setChat([...chat, JSON.parse(event.body)]);\n                    }\n                );\n            }\n        }\n    };\n\n    useEffect(() => {\n        subscribeAndOpen();\n        console.log(chat.length);\n    }, [socket, chat]);\n\n    const sendMessage = () => {\n        if (socket.current && message !== '') {\n            socket.current.send(\n                `/server/chat/${activityId}`,\n                {},\n                JSON.stringify({\n                    userId: localStorage.getItem('userID'),\n                    message: message,\n                })\n            );\n            setMessage('');\n        }\n    };\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [chat]);\n\n    const onKeyDown = (e: any) => {\n        if (e.code === 'Enter') {\n            sendMessage();\n        }\n    };\n\n    const mapHistoryAndChat = (): React.ReactElement[] => {\n        const history: React.ReactElement[] = chatHistory.map((msg, index) => {\n            return (\n                <StyledMessage\n                    key={index}\n                    name={msg.user.firstName}\n                    time={msg.timestamp}\n                    userId={msg.user.userId}\n                    message={msg.message}\n                    image={msg.user.image}\n                ></StyledMessage>\n            );\n        });\n        const newMessages: React.ReactElement[] = chat.map((msg, index) => {\n            return (\n                <StyledMessage\n                    key={index}\n                    name={msg.user.firstName}\n                    time={msg.timestamp}\n                    userId={msg.user.userId}\n                    message={msg.message}\n                    image={msg.user.image}\n                ></StyledMessage>\n            );\n        });\n        return [...history, ...newMessages];\n    };\n\n    const scrollToBottom = () => {\n        const messagebox = document.getElementById('chat');\n        if (messagebox) {\n            messagebox.scrollTop = messagebox.scrollHeight;\n        }\n    };\n\n    const onChangeMessage = (event: ChangeEvent<HTMLInputElement>) => {\n        const msg: string = (event.target as HTMLInputElement).value;\n        setMessage(msg);\n    };\n    return (\n        <Drawer variant=\"persistent\" anchor=\"right\" open={open}>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <h2\n                        style={{\n                            position: 'absolute',\n                            top: '5px',\n                            left: '20px',\n                        }}\n                    >\n                        CHAT\n                    </h2>\n                    <Button\n                        style={{\n                            position: 'absolute',\n                            top: '20px',\n                            right: '20px',\n                        }}\n                        onClick={() => {\n                            close();\n                            if (socket.current) {\n                                socket.current.disconnect();\n                            }\n                        }}\n                    >\n                        Lukk\n                    </Button>\n                </Grid>\n                <Grid item xs={12} sm container>\n                    <Grid item xs container direction=\"column\" spacing={2}>\n                        <Grid item xs>\n                            <MessageBox id=\"chat\">\n                                {mapHistoryAndChat()}\n                            </MessageBox>\n                        </Grid>\n                        <Grid item>\n                            <SendMessage>\n                                <TextField\n                                    onKeyDown={onKeyDown}\n                                    onChange={onChangeMessage}\n                                    value={message}\n                                    style={{\n                                        width: '90%',\n                                        marginLeft: '1rem',\n                                        height: '5rem',\n                                    }}\n                                    label=\"Send Melding\"\n                                ></TextField>\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    style={{\n                                        width: '10%',\n                                        height: '10%',\n                                        marginLeft: '0.5rem',\n                                    }}\n                                    onClick={sendMessage}\n                                >\n                                    <SendRoundedIcon />\n                                </Button>\n                            </SendMessage>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Drawer>\n    );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}