{"ast":null,"code":"import _slicedToArray from\"/Users/olelokken/DEV/gidd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import WeatherContent from'./WeatherContent';/* Her hentast værmeldinga frå openweathermap og den rette værmeldinga vert sendt til\nweathercontent*/import{jsx as _jsx}from\"react/jsx-runtime\";var WeatherComponent=function WeatherComponent(_ref){var lat=_ref.lat,lon=_ref.lon,time=_ref.time;var latitude=new String(lat);var longitude=new String(lon);var dateExact=new Date(time);var dateRounded=roundThirdHour(dateExact);var openWeatherURL=\"http://api.openweathermap.org/data/2.5/forecast?\";var lat_long=\"lat=\"+latitude+\"&lon=\"+longitude;var join_key=\"&appid=\"+\"bf5aff56f689df8dd3147e0a62c61bac\";var units=\"&units=metric\";var oldNum=new Number(dateRounded);var num=changeFormat(oldNum);var _useState=useState({cityName:'',countryName:'',date:'',temp:0,description:'',hiTemp:0,loTemp:0,wind:0,icon:'',id:0,main:''}),_useState2=_slicedToArray(_useState,2),weather=_useState2[0],setWeather=_useState2[1];/* Runder av tida til nærmaste tredje time */function roundThirdHour(date){var myDate=date;myDate.setHours(myDate.getHours()+Math.round(myDate.getMinutes()/60));myDate.setMinutes(0,0,0);var diff=myDate.getHours()%3;if(diff===1){myDate.setHours(myDate.getHours()-1);}if(diff===2){myDate.setHours(myDate.getHours()+1);}return myDate;}function changeFormat(num){var newNum=num/1000;newNum=newNum+7200;return newNum;}/* Hentar værmeldinger og finn den som stemmer for tidspunktet til økta */useEffect(function(){Promise.all([fetch(openWeatherURL+lat_long+join_key+units)]).then(function(_ref2){var _ref3=_slicedToArray(_ref2,1),response=_ref3[0];if(response.ok){return Promise.all([response.json()]);}throw Error(response.statusText);}).then(function(_ref4){var _ref5=_slicedToArray(_ref4,1),data=_ref5[0];for(var w in data.list){if(data.list[w].dt===num){setWeather({cityName:data.city.name,countryName:data.city.country,date:data.list[w].dt_txt,temp:data.list[w].main.temp,description:data.list[w].weather[0].description,hiTemp:data.list[w].main.temp_max,loTemp:data.list[w].main.temp_min,wind:data.list[w].wind.speed,icon:data.list[w].weather[0].icon,id:data.list[w].weather[0].id,main:data.list[w].weather[0].main});}}}).catch(function(error){console.log(error);});},[]);return/*#__PURE__*/_jsx(WeatherContent,{weatherData:weather});};export default WeatherComponent;","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/WeatherComponents/WeatherComponent.tsx"],"names":["React","useEffect","useState","WeatherContent","WeatherComponent","lat","lon","time","latitude","String","longitude","dateExact","Date","dateRounded","roundThirdHour","openWeatherURL","lat_long","join_key","units","oldNum","Number","num","changeFormat","cityName","countryName","date","temp","description","hiTemp","loTemp","wind","icon","id","main","weather","setWeather","myDate","setHours","getHours","Math","round","getMinutes","setMinutes","diff","newNum","Promise","all","fetch","then","response","ok","json","Error","statusText","data","w","list","dt","city","name","country","dt_txt","temp_max","temp_min","speed","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Weather from '../../interfaces/Weather';\nimport WeatherContent from './WeatherContent';\n/* Her hentast værmeldinga frå openweathermap og den rette værmeldinga vert sendt til\nweathercontent*/\n\n\ninterface Props{\n  lat: number;\n  lon: number;\n  time: number;\n}\n\nconst WeatherComponent = ({ lat, lon, time }: Props) =>{\n  const latitude = new String(lat);\n  const longitude = new String(lon);\n  const dateExact = new Date(time);\n  const dateRounded = roundThirdHour(dateExact);\n  const openWeatherURL = \"http://api.openweathermap.org/data/2.5/forecast?\";\n  const lat_long = \"lat=\" +latitude+ \"&lon=\" +longitude;\n  const join_key = \"&appid=\" + \"bf5aff56f689df8dd3147e0a62c61bac\";\n  const units = \"&units=metric\";\n  const oldNum = new Number(dateRounded);\n  const num = changeFormat(oldNum);\n  const [weather, setWeather] = useState<Weather>({\n    cityName: '',\n    countryName: '',\n    date: '',\n    temp: 0,\n    description: '',\n    hiTemp: 0,\n    loTemp: 0,\n    wind: 0,\n    icon: '',\n    id: 0,\n    main: '',\n});\n\n  /* Runder av tida til nærmaste tredje time */\n  function roundThirdHour(date: Date) {\n    const myDate = date;\n    myDate.setHours(myDate.getHours() + Math.round(myDate.getMinutes()/60));\n    myDate.setMinutes(0, 0, 0);\n    const diff = myDate.getHours()%3;\n    if(diff===1){ myDate.setHours(myDate.getHours()-1)}\n    if(diff===2){ myDate.setHours(myDate.getHours()+1)}\n\n    return myDate;\n}\n  function changeFormat(num: any) {\n    let newNum = num/1000;\n    newNum = newNum + 7200;\n    return newNum;\n  }\n\n/* Hentar værmeldinger og finn den som stemmer for tidspunktet til økta */\n  useEffect(() => {\n    Promise.all([fetch(openWeatherURL+lat_long+join_key+units)])\n    .then(([response]) => {\n      if(response.ok){\n      return Promise.all([response.json()]);\n    }\n    throw Error(response.statusText);\n    })\n    .then(([data]) => {\n      for (const w in data.list){\n        if(data.list[w].dt === num){\n          setWeather({\n            cityName: data.city.name,\n            countryName: data.city.country,\n            date: data.list[w].dt_txt,\n            temp: data.list[w].main.temp,\n            description: data.list[w].weather[0].description,\n            hiTemp: data.list[w].main.temp_max,\n            loTemp: data.list[w].main.temp_min,\n            wind: data.list[w].wind.speed,\n            icon: data.list[w].weather[0].icon,\n            id: data.list[w].weather[0].id,\n            main: data.list[w].weather[0].main,\n          })\n        }\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }, []); \n\n  return(\n    <WeatherContent\n      weatherData={weather}\n    />\n  )\n}\n\nexport default WeatherComponent;"]},"metadata":{},"sourceType":"module"}