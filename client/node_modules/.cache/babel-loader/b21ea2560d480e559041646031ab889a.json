{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/components/ActivityComponents/ActivityGrid.tsx\",\n    _s = $RefreshSig$();\n\nimport { GridList } from '@material-ui/core';\nimport Pageination from '@material-ui/lab/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Popup from '../Popup';\nimport ActivityCard from './ActivityCard';\nimport ActivityInformation from './ActivityInformation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n_c = Container;\nconst TransformDiv = styled.div`\n    transition: transform 450ms;\n    min-width: 200px;\n    max-width: 29%;\n    margin: 5px;\n    margin-bottom: 11rem;\n\n    :hover {\n        transform: scale(1.08);\n    }\n`;\n_c2 = TransformDiv;\n\nconst ActivityGrid = ({\n  activities,\n  deleteActivity,\n  register,\n  unRegister\n}) => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [currentActivities, setCurrentActivities] = useState(activities);\n  const [openPopup, setOpenPopup] = useState(false);\n  useEffect(() => {\n    const startIndex = (page - 1) * 12;\n    const endIndex = page * 12;\n    setCurrentActivities(activities.slice(startIndex, endIndex));\n  }, [page, activities]);\n  const [activity, setActivity] = useState({\n    activityId: 0,\n    activityLevel: 'MEDIUM',\n    capacity: 0,\n    daysToRepeat: 0,\n    description: 'test',\n    equipments: [],\n    groupId: 0,\n    image: '',\n    latitude: 0,\n    longitude: 0,\n    registeredParticipants: [],\n    tags: ['SII'],\n    time: 1618924200000,\n    timeCreated: 1618830691000,\n    title: 'Test',\n    user: {}\n  });\n  const renderActivities = currentActivities.map((act, index) => {\n    return /*#__PURE__*/_jsxDEV(TransformDiv, {\n      children: /*#__PURE__*/_jsxDEV(ActivityCard, {\n        activity: act,\n        openPopup: openPopup,\n        setOpenPopup: setOpenPopup,\n        setActivity: setActivity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  });\n\n  const onPageChange = (event, value) => {\n    setPage(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tilgjengelige Aktiviteter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 160,\n      cols: 3,\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '2rem'\n      },\n      children: renderActivities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(ActivityInformation, {\n        register: register,\n        unRegister: unRegister,\n        deleteActivity: deleteActivity,\n        openPopup: openPopup,\n        setOpenPopup: setOpenPopup,\n        activity: activity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pageination, {\n      style: {\n        justifyContent: 'center',\n        display: 'flex'\n      },\n      onChange: onPageChange,\n      count: Math.ceil(activities.length / 12),\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivityGrid, \"SjCAkqfekHPCILB5clCTRgJ+ong=\");\n\n_c3 = ActivityGrid;\nexport default ActivityGrid;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TransformDiv\");\n$RefreshReg$(_c3, \"ActivityGrid\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/ActivityComponents/ActivityGrid.tsx"],"names":["GridList","Pageination","React","useEffect","useState","styled","Popup","ActivityCard","ActivityInformation","Container","div","TransformDiv","ActivityGrid","activities","deleteActivity","register","unRegister","page","setPage","currentActivities","setCurrentActivities","openPopup","setOpenPopup","startIndex","endIndex","slice","activity","setActivity","activityId","activityLevel","capacity","daysToRepeat","description","equipments","groupId","image","latitude","longitude","registeredParticipants","tags","time","timeCreated","title","user","renderActivities","map","act","index","onPageChange","event","value","display","justifyContent","marginBottom","Math","ceil","length"],"mappings":"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","sourcesContent":["import { GridList } from '@material-ui/core';\nimport Pageination from '@material-ui/lab/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport ActivityResponse from '../../interfaces/ActivityResponse';\nimport Popup from '../Popup';\nimport ActivityCard from './ActivityCard';\nimport ActivityInformation from './ActivityInformation';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst TransformDiv = styled.div`\n    transition: transform 450ms;\n    min-width: 200px;\n    max-width: 29%;\n    margin: 5px;\n    margin-bottom: 11rem;\n\n    :hover {\n        transform: scale(1.08);\n    }\n`;\n\ninterface Props {\n    activities: ActivityResponse[];\n    deleteActivity: (id: number) => void;\n    register: (id: number) => Promise<void>;\n    unRegister: (id: number) => Promise<void>;\n}\n\nconst ActivityGrid = ({\n    activities,\n    deleteActivity,\n    register,\n    unRegister,\n}: Props) => {\n    const [page, setPage] = useState<number>(1);\n    const [currentActivities, setCurrentActivities] = useState<\n        ActivityResponse[]\n    >(activities);\n    const [openPopup, setOpenPopup] = useState<boolean>(false);\n\n    useEffect(() => {\n        const startIndex = (page - 1) * 12;\n        const endIndex = page * 12;\n        setCurrentActivities(activities.slice(startIndex, endIndex));\n    }, [page, activities]);\n\n    const [activity, setActivity] = useState<ActivityResponse>({\n        activityId: 0,\n        activityLevel: 'MEDIUM',\n        capacity: 0,\n        daysToRepeat: 0,\n        description: 'test',\n        equipments: [],\n        groupId: 0,\n        image: '',\n        latitude: 0,\n        longitude: 0,\n        registeredParticipants: [],\n        tags: ['SII'],\n        time: 1618924200000,\n        timeCreated: 1618830691000,\n        title: 'Test',\n        user: {},\n    });\n\n    const renderActivities = currentActivities.map((act, index: number) => {\n        return (\n            <TransformDiv key={index}>\n                <ActivityCard\n                    activity={act}\n                    openPopup={openPopup}\n                    setOpenPopup={setOpenPopup}\n                    setActivity={setActivity}\n                ></ActivityCard>\n            </TransformDiv>\n        );\n    });\n\n    const onPageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n    };\n\n    return (\n        <Container>\n            <h2>Tilgjengelige Aktiviteter</h2>\n            <GridList\n                cellHeight={160}\n                cols={3}\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    marginBottom: '2rem',\n                }}\n            >\n                {renderActivities}\n            </GridList>\n            <Popup\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n                maxWidth=\"md\"\n            >\n                <ActivityInformation\n                    register={register}\n                    unRegister={unRegister}\n                    deleteActivity={deleteActivity}\n                    openPopup={openPopup}\n                    setOpenPopup={setOpenPopup}\n                    activity={activity}\n                ></ActivityInformation>\n            </Popup>\n            <Pageination\n                style={{\n                    justifyContent: 'center',\n                    display: 'flex',\n                }}\n                onChange={onPageChange}\n                count={Math.ceil(activities.length / 12)}\n                size=\"large\"\n            />\n        </Container>\n    );\n};\n\nexport default ActivityGrid;\n"]},"metadata":{},"sourceType":"module"}