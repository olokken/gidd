{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/components/Popup.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dialogWrapper: {\n    padding: theme.spacing(2),\n    position: 'absolute',\n    justifyContent: 'center',\n    top: theme.spacing(5),\n    maxHeight: 'auto',\n    marginTop: '-20px'\n  },\n  dialogTitle: {\n    paddingRight: '0px'\n  }\n}));\n\nconst Popup = ({\n  title,\n  openPopup,\n  setOpenPopup,\n  children,\n  fullWidth,\n  maxWidth\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openPopup,\n    maxWidth: maxWidth,\n    fullWidth: fullWidth,\n    classes: {\n      paper: classes.dialogWrapper\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: classes.dialogTitle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          style: {\n            flexGrow: 1,\n            margin: '10px'\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            backgroundColor: 'red'\n          },\n          color: \"secondary\",\n          onClick: () => {\n            setOpenPopup(!openPopup);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Popup, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/Popup.tsx"],"names":["React","Dialog","DialogTitle","DialogContent","makeStyles","Typography","Button","useStyles","theme","dialogWrapper","padding","spacing","position","justifyContent","top","maxHeight","marginTop","dialogTitle","paddingRight","Popup","title","openPopup","setOpenPopup","children","fullWidth","maxWidth","classes","paper","display","flexGrow","margin","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,UALJ,EAMIC,MANJ,QAOO,mBAPP;;AAkBA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADE;AAEXC,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,cAAc,EAAE,QAHL;AAIXC,IAAAA,GAAG,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd,CAJM;AAKXI,IAAAA,SAAS,EAAE,MALA;AAMXC,IAAAA,SAAS,EAAE;AANA,GADsB;AASrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,YAAY,EAAE;AADL;AATwB,CAAZ,CAAD,CAA5B;;AAcA,MAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA,KADW;AAEXC,EAAAA,SAFW;AAGXC,EAAAA,YAHW;AAIXC,EAAAA,QAJW;AAKXC,EAAAA,SALW;AAMXC,EAAAA;AANW,CAAD,KAOD;AAAA;;AACT,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,sBACI,QAAC,MAAD;AACI,IAAA,IAAI,EAAEc,SADV;AAEI,IAAA,QAAQ,EAAEI,QAFd;AAGI,IAAA,SAAS,EAAED,SAHf;AAII,IAAA,OAAO,EAAE;AAAEG,MAAAA,KAAK,EAAED,OAAO,CAACjB;AAAjB,KAJb;AAAA,4BAMI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEiB,OAAO,CAACT,WAAhC;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAAEW,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA,gCACI,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,IADZ;AAEI,UAAA,SAAS,EAAC,KAFd;AAGI,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,CAAZ;AAAgBC,YAAAA,MAAM,EAAC;AAAvB,WAHX;AAAA,oBAKKV;AALL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,MAAD;AACI,UAAA,KAAK,EAAE;AAAEW,YAAAA,eAAe,EAAE;AAAnB,WADX;AAEI,UAAA,KAAK,EAAC,WAFV;AAGI,UAAA,OAAO,EAAE,MAAM;AACXT,YAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,WALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eA0BI,QAAC,aAAD;AAAe,MAAA,QAAQ,MAAvB;AAAA,gBAAyBE;AAAzB;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAvCD;;GAAMJ,K;UAQcZ,S;;;KARdY,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    makeStyles,\n    Typography,\n    Button,\n} from '@material-ui/core';\n\ninterface Props {\n    title?: string;\n    children?: React.ReactNode;\n    openPopup: boolean;\n    setOpenPopup: React.Dispatch<React.SetStateAction<boolean>>;\n    fullWidth?: boolean;\n    maxWidth?: false | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | undefined;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    dialogWrapper: {\n        padding: theme.spacing(2),\n        position: 'absolute',\n        justifyContent: 'center',\n        top: theme.spacing(5),\n        maxHeight: 'auto',\n        marginTop: '-20px',\n    },\n    dialogTitle: {\n        paddingRight: '0px',\n    },\n}));\n\nconst Popup = ({\n    title,\n    openPopup,\n    setOpenPopup,\n    children,\n    fullWidth,\n    maxWidth,\n}: Props) => {\n    const classes = useStyles();\n    return (\n        <Dialog\n            open={openPopup}\n            maxWidth={maxWidth}\n            fullWidth={fullWidth}\n            classes={{ paper: classes.dialogWrapper }}\n        >\n            <DialogTitle className={classes.dialogTitle}>\n                <div style={{ display: 'flex' }}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\"\n                        style={{ flexGrow: 1 , margin:'10px'}}\n                    >\n                        {title}\n                    </Typography>\n                    <Button\n                        style={{ backgroundColor: 'red' }}\n                        color=\"secondary\"\n                        onClick={() => {\n                            setOpenPopup(!openPopup);\n                        }}\n                    >\n                        X\n                    </Button>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers>{children}</DialogContent>\n        </Dialog>\n    );\n};\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}