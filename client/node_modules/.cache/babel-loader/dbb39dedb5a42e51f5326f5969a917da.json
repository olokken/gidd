{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/components/FilterComponents/NumberFilter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Slider, TextField, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderContainer = styled.div`\n    width: 100%;\n    margin-top: '20px';\n`;\n_c = SliderContainer;\n\nconst NumberFilter = ({\n  minValue,\n  maxValue,\n  headline,\n  onCapacityChange\n}) => {\n  _s();\n\n  const [value, setValue] = useState([0, 10000]);\n  useEffect(() => {\n    onCapacityChange(value);\n  }, [value]);\n  useEffect(() => {\n    onCapacityChange(value);\n  }, [value]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const onChangeValue = event => {\n    const newValue = [parseInt(event.target.value), value[1]];\n\n    if (newValue[0] >= 0 && newValue[0] <= newValue[1]) {\n      setValue(newValue);\n    }\n  };\n\n  const onChangeValue2 = event => {\n    const newValue = [value[0], parseInt(event.target.value)];\n\n    if (newValue[1] >= newValue[0]) {\n      setValue(newValue);\n    }\n  };\n\n  const reset = () => {\n    setValue([0, 10000]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SliderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: headline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        minWidth: '60px',\n        width: '45%',\n        marginBottom: 24,\n        marginRight: '5px'\n      },\n      onChange: onChangeValue,\n      value: value[0],\n      id: \"filled-number\",\n      label: \"Min\",\n      type: \"number\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        minWidth: '60px',\n        width: '45%',\n        marginBottom: 24,\n        marginRight: '5px'\n      },\n      onChange: onChangeValue2,\n      value: value[1],\n      id: \"filled-number\",\n      label: \"Max\",\n      type: \"number\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: value,\n      onChange: handleChange,\n      valueLabelDisplay: \"off\",\n      \"aria-labelledby\": \"range-slider\",\n      min: minValue,\n      max: maxValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: reset,\n      children: \"Nullstill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NumberFilter, \"uknwv7G45R2qc1/TCGAqgnRzlzc=\");\n\n_c2 = NumberFilter;\nexport default NumberFilter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliderContainer\");\n$RefreshReg$(_c2, \"NumberFilter\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/FilterComponents/NumberFilter.tsx"],"names":["React","useEffect","useState","Slider","TextField","Button","styled","SliderContainer","div","NumberFilter","minValue","maxValue","headline","onCapacityChange","value","setValue","handleChange","event","newValue","onChangeValue","parseInt","target","onChangeValue2","reset","minWidth","width","marginBottom","marginRight","shrink"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { Slider, TextField, Button } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst SliderContainer = styled.div`\n    width: 100%;\n    margin-top: '20px';\n`;\n\ninterface Props {\n    headline: string;\n    minValue: number;\n    maxValue: number;\n    onCapacityChange: (range: number[]) => void;\n}\n\nconst NumberFilter = ({\n    minValue,\n    maxValue,\n    headline,\n    onCapacityChange,\n}: Props) => {\n    const [value, setValue] = useState<number[]>([0, 10000]);\n\n    useEffect(() => {\n        onCapacityChange(value);\n    }, [value]);\n\n    useEffect(() => {\n        onCapacityChange(value);\n    }, [value]);\n    const handleChange = (event: any, newValue: number | number[]) => {\n        setValue(newValue as number[]);\n    };\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const newValue = [parseInt(event.target.value), value[1]];\n        if (newValue[0] >= 0 && newValue[0] <= newValue[1]) {\n            setValue(newValue);\n        }\n    };\n\n    const onChangeValue2 = (event: ChangeEvent<HTMLInputElement>) => {\n        const newValue = [value[0], parseInt(event.target.value)];\n        if (newValue[1] >= newValue[0]) {\n            setValue(newValue);\n        }\n    };\n\n    const reset = () => {\n        setValue([0, 10000]); \n    }\n\n    return (\n        <SliderContainer>\n            <h3>{headline}</h3>\n            <TextField\n                style={{\n                    minWidth: '60px',\n                    width: '45%',\n                    marginBottom: 24,\n                    marginRight: '5px',\n                }}\n                onChange={onChangeValue}\n                value={value[0]}\n                id=\"filled-number\"\n                label=\"Min\"\n                type=\"number\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                variant=\"outlined\"\n            />\n            <TextField\n                style={{\n                    minWidth: '60px',\n                    width: '45%',\n                    marginBottom: 24,\n                    marginRight: '5px',\n                }}\n                onChange={onChangeValue2}\n                value={value[1]}\n                id=\"filled-number\"\n                label=\"Max\"\n                type=\"number\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                variant=\"outlined\"\n            />\n            <Slider\n                value={value}\n                onChange={handleChange}\n                valueLabelDisplay=\"off\"\n                aria-labelledby=\"range-slider\"\n                min={minValue}\n                max={maxValue}\n            />\n            <Button onClick={reset}>Nullstill</Button>\n        </SliderContainer>\n    );\n};\n\nexport default NumberFilter;\n"]},"metadata":{},"sourceType":"module"}