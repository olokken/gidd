{"ast":null,"code":"var _jsxFileName = \"/Users/olelokken/DEV/gidd/client/src/components/ChatComponents/StyledMessage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Tooltip } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from '../../UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendtMessage = styled.fieldset`\n    position: left;\n    float: left;\n    width: 50%;\n    height: relative;\n    padding: 5px;\n    background-color: primary;\n    margin: 3px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n`;\n_c = SendtMessage;\nconst Flex = styled.div`\n    display:flex;\n`;\n_c2 = Flex;\nconst RecievedMessage = styled.fieldset`\n    position: left;\n    float: right;\n    width: 50%;\n    height: relative;\n    padding: 5px;\n    background-color: none;\n    margin: 3px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n`;\n_c3 = RecievedMessage;\n\nconst StyledMessage = ({\n  message,\n  userId,\n  time,\n  name,\n  image\n}) => {\n  _s();\n\n  const {\n    user\n  } = useContext(UserContext);\n  const date = new Date(time);\n\n  const MessageStyle = () => {\n    if (userId == user) {\n      return /*#__PURE__*/_jsxDEV(RecievedMessage, {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(SendtMessage, {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: date.toString(),\n    children: MessageStyle()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n};\n\n_s(StyledMessage, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c4 = StyledMessage;\nexport default StyledMessage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SendtMessage\");\n$RefreshReg$(_c2, \"Flex\");\n$RefreshReg$(_c3, \"RecievedMessage\");\n$RefreshReg$(_c4, \"StyledMessage\");","map":{"version":3,"sources":["/Users/olelokken/DEV/gidd/client/src/components/ChatComponents/StyledMessage.tsx"],"names":["Avatar","Tooltip","React","useContext","styled","UserContext","SendtMessage","fieldset","Flex","div","RecievedMessage","StyledMessage","message","userId","time","name","image","user","date","Date","MessageStyle","toString"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAWA,MAAMC,YAAY,GAAGF,MAAM,CAACG,QAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;KAAMD,Y;AAaN,MAAME,IAAI,GAAGJ,MAAM,CAACK,GAAI;AACxB;AACA,CAFA;MAAMD,I;AAIN,MAAME,eAAe,GAAGN,MAAM,CAACG,QAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMG,e;;AAaN,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,IAAzB;AAA+BC,EAAAA;AAA/B,CAAD,KAAmD;AAAA;;AACrE,QAAM;AAAEC,IAAAA;AAAF,MAAWd,UAAU,CAACE,WAAD,CAA3B;AACA,QAAMa,IAAI,GAAG,IAAIC,IAAJ,CAASL,IAAT,CAAb;;AAEA,QAAMM,YAAY,GAAG,MAA0B;AAC3C,QAAIP,MAAM,IAAII,IAAd,EAAoB;AAChB,0BACI,QAAC,eAAD;AAAA,gCACI;AAAA,oBAASF;AAAT;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,EAC2BJ,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATD,MASO;AACH,0BACI,QAAC,YAAD;AAAA,gCACI;AAAA,oBAASG;AAAT;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,EAC2BJ,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH;AACJ,GApBD;;AAsBA,sBAAO,QAAC,OAAD;AAAS,IAAA,KAAK,EAAEM,IAAI,CAACG,QAAL,EAAhB;AAAA,cAAkCD,YAAY;AAA9C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA3BD;;GAAMT,a;;MAAAA,a;AA6BN,eAAeA,aAAf","sourcesContent":["import { Avatar, Tooltip } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { UserContext } from '../../UserContext';\n\ninterface Props {\n    message: string;\n    name: string;\n    userId: string;\n    time: number;\n    image: string;\n}\n\n\nconst SendtMessage = styled.fieldset`\n    position: left;\n    float: left;\n    width: 50%;\n    height: relative;\n    padding: 5px;\n    background-color: primary;\n    margin: 3px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n`;\n\nconst Flex = styled.div`\n    display:flex;\n`;\n\nconst RecievedMessage = styled.fieldset`\n    position: left;\n    float: right;\n    width: 50%;\n    height: relative;\n    padding: 5px;\n    background-color: none;\n    margin: 3px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n`;\n\nconst StyledMessage = ({ message, userId, time, name, image }: Props) => {\n    const { user } = useContext(UserContext);\n    const date = new Date(time);\n\n    const MessageStyle = (): React.ReactElement => {\n        if (userId == user) {\n            return (\n                <RecievedMessage>\n                    <legend>{name}</legend>\n                    <Flex>\n                        <Avatar src={image} />{message}\n                    </Flex>\n                </RecievedMessage>\n            );\n        } else {\n            return (\n                <SendtMessage>\n                    <legend>{name}</legend>\n                    <Flex>\n                        <Avatar src={image} />{message}\n                    </Flex>\n                </SendtMessage>\n            );\n        }\n    };\n\n    return <Tooltip title={date.toString()}>{MessageStyle()}</Tooltip>;\n};\n\nexport default StyledMessage;\n"]},"metadata":{},"sourceType":"module"}